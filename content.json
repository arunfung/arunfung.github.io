{"pages":[{"title":"about","text":"","link":"/about/index.html"},{"title":"","text":"/*! * Font Awesome Free 5.4.1 by @fontawesome - https://fontawesome.com * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) */ .fa,.fab,.fal,.far,.fas{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-block;font-style:normal;font-variant:normal;text-rendering:auto;line-height:1}.fa-lg{font-size:1.33333em;line-height:.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:.08em solid #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fab.fa-pull-left,.fal.fa-pull-left,.far.fa-pull-left,.fas.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fab.fa-pull-right,.fal.fa-pull-right,.far.fa-pull-right,.fas.fa-pull-right{margin-left:.3em}.fa-spin{animation:fa-spin 2s infinite linear}.fa-pulse{animation:fa-spin 1s infinite steps(8)}@keyframes fa-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.fa-rotate-90{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";transform:rotate(90deg)}.fa-rotate-180{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";transform:rotate(180deg)}.fa-rotate-270{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";transform:rotate(270deg)}.fa-flip-horizontal{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";transform:scaleX(-1)}.fa-flip-vertical{transform:scaleY(-1)}.fa-flip-horizontal.fa-flip-vertical,.fa-flip-vertical{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\"}.fa-flip-horizontal.fa-flip-vertical{transform:scale(-1)}:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270{-webkit-filter:none;filter:none}.fa-stack{display:inline-block;height:2em;line-height:2em;position:relative;vertical-align:middle;width:2em}.fa-stack-1x,.fa-stack-2x{left:0;position:absolute;text-align:center;width:100%}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-500px:before{content:\"\\f26e\"}.fa-accessible-icon:before{content:\"\\f368\"}.fa-accusoft:before{content:\"\\f369\"}.fa-acquisitions-incorporated:before{content:\"\\f6af\"}.fa-ad:before{content:\"\\f641\"}.fa-address-book:before{content:\"\\f2b9\"}.fa-address-card:before{content:\"\\f2bb\"}.fa-adjust:before{content:\"\\f042\"}.fa-adn:before{content:\"\\f170\"}.fa-adversal:before{content:\"\\f36a\"}.fa-affiliatetheme:before{content:\"\\f36b\"}.fa-air-freshener:before{content:\"\\f5d0\"}.fa-algolia:before{content:\"\\f36c\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-justify:before{content:\"\\f039\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-right:before{content:\"\\f038\"}.fa-alipay:before{content:\"\\f642\"}.fa-allergies:before{content:\"\\f461\"}.fa-amazon:before{content:\"\\f270\"}.fa-amazon-pay:before{content:\"\\f42c\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-american-sign-language-interpreting:before{content:\"\\f2a3\"}.fa-amilia:before{content:\"\\f36d\"}.fa-anchor:before{content:\"\\f13d\"}.fa-android:before{content:\"\\f17b\"}.fa-angellist:before{content:\"\\f209\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-down:before{content:\"\\f107\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angry:before{content:\"\\f556\"}.fa-angrycreative:before{content:\"\\f36e\"}.fa-angular:before{content:\"\\f420\"}.fa-ankh:before{content:\"\\f644\"}.fa-app-store:before{content:\"\\f36f\"}.fa-app-store-ios:before{content:\"\\f370\"}.fa-apper:before{content:\"\\f371\"}.fa-apple:before{content:\"\\f179\"}.fa-apple-alt:before{content:\"\\f5d1\"}.fa-apple-pay:before{content:\"\\f415\"}.fa-archive:before{content:\"\\f187\"}.fa-archway:before{content:\"\\f557\"}.fa-arrow-alt-circle-down:before{content:\"\\f358\"}.fa-arrow-alt-circle-left:before{content:\"\\f359\"}.fa-arrow-alt-circle-right:before{content:\"\\f35a\"}.fa-arrow-alt-circle-up:before{content:\"\\f35b\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-arrows-alt-h:before{content:\"\\f337\"}.fa-arrows-alt-v:before{content:\"\\f338\"}.fa-assistive-listening-systems:before{content:\"\\f2a2\"}.fa-asterisk:before{content:\"\\f069\"}.fa-asymmetrik:before{content:\"\\f372\"}.fa-at:before{content:\"\\f1fa\"}.fa-atlas:before{content:\"\\f558\"}.fa-atom:before{content:\"\\f5d2\"}.fa-audible:before{content:\"\\f373\"}.fa-audio-description:before{content:\"\\f29e\"}.fa-autoprefixer:before{content:\"\\f41c\"}.fa-avianex:before{content:\"\\f374\"}.fa-aviato:before{content:\"\\f421\"}.fa-award:before{content:\"\\f559\"}.fa-aws:before{content:\"\\f375\"}.fa-backspace:before{content:\"\\f55a\"}.fa-backward:before{content:\"\\f04a\"}.fa-balance-scale:before{content:\"\\f24e\"}.fa-ban:before{content:\"\\f05e\"}.fa-band-aid:before{content:\"\\f462\"}.fa-bandcamp:before{content:\"\\f2d5\"}.fa-barcode:before{content:\"\\f02a\"}.fa-bars:before{content:\"\\f0c9\"}.fa-baseball-ball:before{content:\"\\f433\"}.fa-basketball-ball:before{content:\"\\f434\"}.fa-bath:before{content:\"\\f2cd\"}.fa-battery-empty:before{content:\"\\f244\"}.fa-battery-full:before{content:\"\\f240\"}.fa-battery-half:before{content:\"\\f242\"}.fa-battery-quarter:before{content:\"\\f243\"}.fa-battery-three-quarters:before{content:\"\\f241\"}.fa-bed:before{content:\"\\f236\"}.fa-beer:before{content:\"\\f0fc\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-bell:before{content:\"\\f0f3\"}.fa-bell-slash:before{content:\"\\f1f6\"}.fa-bezier-curve:before{content:\"\\f55b\"}.fa-bible:before{content:\"\\f647\"}.fa-bicycle:before{content:\"\\f206\"}.fa-bimobject:before{content:\"\\f378\"}.fa-binoculars:before{content:\"\\f1e5\"}.fa-birthday-cake:before{content:\"\\f1fd\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitcoin:before{content:\"\\f379\"}.fa-bity:before{content:\"\\f37a\"}.fa-black-tie:before{content:\"\\f27e\"}.fa-blackberry:before{content:\"\\f37b\"}.fa-blender:before{content:\"\\f517\"}.fa-blender-phone:before{content:\"\\f6b6\"}.fa-blind:before{content:\"\\f29d\"}.fa-blogger:before{content:\"\\f37c\"}.fa-blogger-b:before{content:\"\\f37d\"}.fa-bluetooth:before{content:\"\\f293\"}.fa-bluetooth-b:before{content:\"\\f294\"}.fa-bold:before{content:\"\\f032\"}.fa-bolt:before{content:\"\\f0e7\"}.fa-bomb:before{content:\"\\f1e2\"}.fa-bone:before{content:\"\\f5d7\"}.fa-bong:before{content:\"\\f55c\"}.fa-book:before{content:\"\\f02d\"}.fa-book-dead:before{content:\"\\f6b7\"}.fa-book-open:before{content:\"\\f518\"}.fa-book-reader:before{content:\"\\f5da\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-bowling-ball:before{content:\"\\f436\"}.fa-box:before{content:\"\\f466\"}.fa-box-open:before{content:\"\\f49e\"}.fa-boxes:before{content:\"\\f468\"}.fa-braille:before{content:\"\\f2a1\"}.fa-brain:before{content:\"\\f5dc\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-briefcase-medical:before{content:\"\\f469\"}.fa-broadcast-tower:before{content:\"\\f519\"}.fa-broom:before{content:\"\\f51a\"}.fa-brush:before{content:\"\\f55d\"}.fa-btc:before{content:\"\\f15a\"}.fa-bug:before{content:\"\\f188\"}.fa-building:before{content:\"\\f1ad\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bullseye:before{content:\"\\f140\"}.fa-burn:before{content:\"\\f46a\"}.fa-buromobelexperte:before{content:\"\\f37f\"}.fa-bus:before{content:\"\\f207\"}.fa-bus-alt:before{content:\"\\f55e\"}.fa-business-time:before{content:\"\\f64a\"}.fa-buysellads:before{content:\"\\f20d\"}.fa-calculator:before{content:\"\\f1ec\"}.fa-calendar:before{content:\"\\f133\"}.fa-calendar-alt:before{content:\"\\f073\"}.fa-calendar-check:before{content:\"\\f274\"}.fa-calendar-minus:before{content:\"\\f272\"}.fa-calendar-plus:before{content:\"\\f271\"}.fa-calendar-times:before{content:\"\\f273\"}.fa-camera:before{content:\"\\f030\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-campground:before{content:\"\\f6bb\"}.fa-cannabis:before{content:\"\\f55f\"}.fa-capsules:before{content:\"\\f46b\"}.fa-car:before{content:\"\\f1b9\"}.fa-car-alt:before{content:\"\\f5de\"}.fa-car-battery:before{content:\"\\f5df\"}.fa-car-crash:before{content:\"\\f5e1\"}.fa-car-side:before{content:\"\\f5e4\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-caret-square-down:before{content:\"\\f150\"}.fa-caret-square-left:before{content:\"\\f191\"}.fa-caret-square-right:before{content:\"\\f152\"}.fa-caret-square-up:before{content:\"\\f151\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-cart-arrow-down:before{content:\"\\f218\"}.fa-cart-plus:before{content:\"\\f217\"}.fa-cat:before{content:\"\\f6be\"}.fa-cc-amazon-pay:before{content:\"\\f42d\"}.fa-cc-amex:before{content:\"\\f1f3\"}.fa-cc-apple-pay:before{content:\"\\f416\"}.fa-cc-diners-club:before{content:\"\\f24c\"}.fa-cc-discover:before{content:\"\\f1f2\"}.fa-cc-jcb:before{content:\"\\f24b\"}.fa-cc-mastercard:before{content:\"\\f1f1\"}.fa-cc-paypal:before{content:\"\\f1f4\"}.fa-cc-stripe:before{content:\"\\f1f5\"}.fa-cc-visa:before{content:\"\\f1f0\"}.fa-centercode:before{content:\"\\f380\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-chair:before{content:\"\\f6c0\"}.fa-chalkboard:before{content:\"\\f51b\"}.fa-chalkboard-teacher:before{content:\"\\f51c\"}.fa-charging-station:before{content:\"\\f5e7\"}.fa-chart-area:before{content:\"\\f1fe\"}.fa-chart-bar:before{content:\"\\f080\"}.fa-chart-line:before{content:\"\\f201\"}.fa-chart-pie:before{content:\"\\f200\"}.fa-check:before{content:\"\\f00c\"}.fa-check-circle:before{content:\"\\f058\"}.fa-check-double:before{content:\"\\f560\"}.fa-check-square:before{content:\"\\f14a\"}.fa-chess:before{content:\"\\f439\"}.fa-chess-bishop:before{content:\"\\f43a\"}.fa-chess-board:before{content:\"\\f43c\"}.fa-chess-king:before{content:\"\\f43f\"}.fa-chess-knight:before{content:\"\\f441\"}.fa-chess-pawn:before{content:\"\\f443\"}.fa-chess-queen:before{content:\"\\f445\"}.fa-chess-rook:before{content:\"\\f447\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-child:before{content:\"\\f1ae\"}.fa-chrome:before{content:\"\\f268\"}.fa-church:before{content:\"\\f51d\"}.fa-circle:before{content:\"\\f111\"}.fa-circle-notch:before{content:\"\\f1ce\"}.fa-city:before{content:\"\\f64f\"}.fa-clipboard:before{content:\"\\f328\"}.fa-clipboard-check:before{content:\"\\f46c\"}.fa-clipboard-list:before{content:\"\\f46d\"}.fa-clock:before{content:\"\\f017\"}.fa-clone:before{content:\"\\f24d\"}.fa-closed-captioning:before{content:\"\\f20a\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-cloud-download-alt:before{content:\"\\f381\"}.fa-cloud-moon:before{content:\"\\f6c3\"}.fa-cloud-sun:before{content:\"\\f6c4\"}.fa-cloud-upload-alt:before{content:\"\\f382\"}.fa-cloudscale:before{content:\"\\f383\"}.fa-cloudsmith:before{content:\"\\f384\"}.fa-cloudversify:before{content:\"\\f385\"}.fa-cocktail:before{content:\"\\f561\"}.fa-code:before{content:\"\\f121\"}.fa-code-branch:before{content:\"\\f126\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-codiepie:before{content:\"\\f284\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cog:before{content:\"\\f013\"}.fa-cogs:before{content:\"\\f085\"}.fa-coins:before{content:\"\\f51e\"}.fa-columns:before{content:\"\\f0db\"}.fa-comment:before{content:\"\\f075\"}.fa-comment-alt:before{content:\"\\f27a\"}.fa-comment-dollar:before{content:\"\\f651\"}.fa-comment-dots:before{content:\"\\f4ad\"}.fa-comment-slash:before{content:\"\\f4b3\"}.fa-comments:before{content:\"\\f086\"}.fa-comments-dollar:before{content:\"\\f653\"}.fa-compact-disc:before{content:\"\\f51f\"}.fa-compass:before{content:\"\\f14e\"}.fa-compress:before{content:\"\\f066\"}.fa-concierge-bell:before{content:\"\\f562\"}.fa-connectdevelop:before{content:\"\\f20e\"}.fa-contao:before{content:\"\\f26d\"}.fa-cookie:before{content:\"\\f563\"}.fa-cookie-bite:before{content:\"\\f564\"}.fa-copy:before{content:\"\\f0c5\"}.fa-copyright:before{content:\"\\f1f9\"}.fa-couch:before{content:\"\\f4b8\"}.fa-cpanel:before{content:\"\\f388\"}.fa-creative-commons:before{content:\"\\f25e\"}.fa-creative-commons-by:before{content:\"\\f4e7\"}.fa-creative-commons-nc:before{content:\"\\f4e8\"}.fa-creative-commons-nc-eu:before{content:\"\\f4e9\"}.fa-creative-commons-nc-jp:before{content:\"\\f4ea\"}.fa-creative-commons-nd:before{content:\"\\f4eb\"}.fa-creative-commons-pd:before{content:\"\\f4ec\"}.fa-creative-commons-pd-alt:before{content:\"\\f4ed\"}.fa-creative-commons-remix:before{content:\"\\f4ee\"}.fa-creative-commons-sa:before{content:\"\\f4ef\"}.fa-creative-commons-sampling:before{content:\"\\f4f0\"}.fa-creative-commons-sampling-plus:before{content:\"\\f4f1\"}.fa-creative-commons-share:before{content:\"\\f4f2\"}.fa-creative-commons-zero:before{content:\"\\f4f3\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-critical-role:before{content:\"\\f6c9\"}.fa-crop:before{content:\"\\f125\"}.fa-crop-alt:before{content:\"\\f565\"}.fa-cross:before{content:\"\\f654\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-crow:before{content:\"\\f520\"}.fa-crown:before{content:\"\\f521\"}.fa-css3:before{content:\"\\f13c\"}.fa-css3-alt:before{content:\"\\f38b\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-cut:before{content:\"\\f0c4\"}.fa-cuttlefish:before{content:\"\\f38c\"}.fa-d-and-d:before{content:\"\\f38d\"}.fa-dashcube:before{content:\"\\f210\"}.fa-database:before{content:\"\\f1c0\"}.fa-deaf:before{content:\"\\f2a4\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-deploydog:before{content:\"\\f38e\"}.fa-deskpro:before{content:\"\\f38f\"}.fa-desktop:before{content:\"\\f108\"}.fa-dev:before{content:\"\\f6cc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-dharmachakra:before{content:\"\\f655\"}.fa-diagnoses:before{content:\"\\f470\"}.fa-dice:before{content:\"\\f522\"}.fa-dice-d20:before{content:\"\\f6cf\"}.fa-dice-d6:before{content:\"\\f6d1\"}.fa-dice-five:before{content:\"\\f523\"}.fa-dice-four:before{content:\"\\f524\"}.fa-dice-one:before{content:\"\\f525\"}.fa-dice-six:before{content:\"\\f526\"}.fa-dice-three:before{content:\"\\f527\"}.fa-dice-two:before{content:\"\\f528\"}.fa-digg:before{content:\"\\f1a6\"}.fa-digital-ocean:before{content:\"\\f391\"}.fa-digital-tachograph:before{content:\"\\f566\"}.fa-directions:before{content:\"\\f5eb\"}.fa-discord:before{content:\"\\f392\"}.fa-discourse:before{content:\"\\f393\"}.fa-divide:before{content:\"\\f529\"}.fa-dizzy:before{content:\"\\f567\"}.fa-dna:before{content:\"\\f471\"}.fa-dochub:before{content:\"\\f394\"}.fa-docker:before{content:\"\\f395\"}.fa-dog:before{content:\"\\f6d3\"}.fa-dollar-sign:before{content:\"\\f155\"}.fa-dolly:before{content:\"\\f472\"}.fa-dolly-flatbed:before{content:\"\\f474\"}.fa-donate:before{content:\"\\f4b9\"}.fa-door-closed:before{content:\"\\f52a\"}.fa-door-open:before{content:\"\\f52b\"}.fa-dot-circle:before{content:\"\\f192\"}.fa-dove:before{content:\"\\f4ba\"}.fa-download:before{content:\"\\f019\"}.fa-draft2digital:before{content:\"\\f396\"}.fa-drafting-compass:before{content:\"\\f568\"}.fa-dragon:before{content:\"\\f6d5\"}.fa-draw-polygon:before{content:\"\\f5ee\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-dribbble-square:before{content:\"\\f397\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-drum:before{content:\"\\f569\"}.fa-drum-steelpan:before{content:\"\\f56a\"}.fa-drumstick-bite:before{content:\"\\f6d7\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-dumbbell:before{content:\"\\f44b\"}.fa-dungeon:before{content:\"\\f6d9\"}.fa-dyalog:before{content:\"\\f399\"}.fa-earlybirds:before{content:\"\\f39a\"}.fa-ebay:before{content:\"\\f4f4\"}.fa-edge:before{content:\"\\f282\"}.fa-edit:before{content:\"\\f044\"}.fa-eject:before{content:\"\\f052\"}.fa-elementor:before{content:\"\\f430\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-ello:before{content:\"\\f5f1\"}.fa-ember:before{content:\"\\f423\"}.fa-empire:before{content:\"\\f1d1\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-envelope-open:before{content:\"\\f2b6\"}.fa-envelope-open-text:before{content:\"\\f658\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-envira:before{content:\"\\f299\"}.fa-equals:before{content:\"\\f52c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-erlang:before{content:\"\\f39d\"}.fa-ethereum:before{content:\"\\f42e\"}.fa-etsy:before{content:\"\\f2d7\"}.fa-euro-sign:before{content:\"\\f153\"}.fa-exchange-alt:before{content:\"\\f362\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-exclamation-triangle:before{content:\"\\f071\"}.fa-expand:before{content:\"\\f065\"}.fa-expand-arrows-alt:before{content:\"\\f31e\"}.fa-expeditedssl:before{content:\"\\f23e\"}.fa-external-link-alt:before{content:\"\\f35d\"}.fa-external-link-square-alt:before{content:\"\\f360\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-dropper:before{content:\"\\f1fb\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-facebook:before{content:\"\\f09a\"}.fa-facebook-f:before{content:\"\\f39e\"}.fa-facebook-messenger:before{content:\"\\f39f\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-fantasy-flight-games:before{content:\"\\f6dc\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-fax:before{content:\"\\f1ac\"}.fa-feather:before{content:\"\\f52d\"}.fa-feather-alt:before{content:\"\\f56b\"}.fa-female:before{content:\"\\f182\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-file:before{content:\"\\f15b\"}.fa-file-alt:before{content:\"\\f15c\"}.fa-file-archive:before{content:\"\\f1c6\"}.fa-file-audio:before{content:\"\\f1c7\"}.fa-file-code:before{content:\"\\f1c9\"}.fa-file-contract:before{content:\"\\f56c\"}.fa-file-csv:before{content:\"\\f6dd\"}.fa-file-download:before{content:\"\\f56d\"}.fa-file-excel:before{content:\"\\f1c3\"}.fa-file-export:before{content:\"\\f56e\"}.fa-file-image:before{content:\"\\f1c5\"}.fa-file-import:before{content:\"\\f56f\"}.fa-file-invoice:before{content:\"\\f570\"}.fa-file-invoice-dollar:before{content:\"\\f571\"}.fa-file-medical:before{content:\"\\f477\"}.fa-file-medical-alt:before{content:\"\\f478\"}.fa-file-pdf:before{content:\"\\f1c1\"}.fa-file-powerpoint:before{content:\"\\f1c4\"}.fa-file-prescription:before{content:\"\\f572\"}.fa-file-signature:before{content:\"\\f573\"}.fa-file-upload:before{content:\"\\f574\"}.fa-file-video:before{content:\"\\f1c8\"}.fa-file-word:before{content:\"\\f1c2\"}.fa-fill:before{content:\"\\f575\"}.fa-fill-drip:before{content:\"\\f576\"}.fa-film:before{content:\"\\f008\"}.fa-filter:before{content:\"\\f0b0\"}.fa-fingerprint:before{content:\"\\f577\"}.fa-fire:before{content:\"\\f06d\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-firefox:before{content:\"\\f269\"}.fa-first-aid:before{content:\"\\f479\"}.fa-first-order:before{content:\"\\f2b0\"}.fa-first-order-alt:before{content:\"\\f50a\"}.fa-firstdraft:before{content:\"\\f3a1\"}.fa-fish:before{content:\"\\f578\"}.fa-fist-raised:before{content:\"\\f6de\"}.fa-flag:before{content:\"\\f024\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-flask:before{content:\"\\f0c3\"}.fa-flickr:before{content:\"\\f16e\"}.fa-flipboard:before{content:\"\\f44d\"}.fa-flushed:before{content:\"\\f579\"}.fa-fly:before{content:\"\\f417\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-minus:before{content:\"\\f65d\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-folder-plus:before{content:\"\\f65e\"}.fa-font:before{content:\"\\f031\"}.fa-font-awesome:before{content:\"\\f2b4\"}.fa-font-awesome-alt:before{content:\"\\f35c\"}.fa-font-awesome-flag:before{content:\"\\f425\"}.fa-font-awesome-logo-full:before{content:\"\\f4e6\"}.fa-fonticons:before{content:\"\\f280\"}.fa-fonticons-fi:before{content:\"\\f3a2\"}.fa-football-ball:before{content:\"\\f44e\"}.fa-fort-awesome:before{content:\"\\f286\"}.fa-fort-awesome-alt:before{content:\"\\f3a3\"}.fa-forumbee:before{content:\"\\f211\"}.fa-forward:before{content:\"\\f04e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-free-code-camp:before{content:\"\\f2c5\"}.fa-freebsd:before{content:\"\\f3a4\"}.fa-frog:before{content:\"\\f52e\"}.fa-frown:before{content:\"\\f119\"}.fa-frown-open:before{content:\"\\f57a\"}.fa-fulcrum:before{content:\"\\f50b\"}.fa-funnel-dollar:before{content:\"\\f662\"}.fa-futbol:before{content:\"\\f1e3\"}.fa-galactic-republic:before{content:\"\\f50c\"}.fa-galactic-senate:before{content:\"\\f50d\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-gas-pump:before{content:\"\\f52f\"}.fa-gavel:before{content:\"\\f0e3\"}.fa-gem:before{content:\"\\f3a5\"}.fa-genderless:before{content:\"\\f22d\"}.fa-get-pocket:before{content:\"\\f265\"}.fa-gg:before{content:\"\\f260\"}.fa-gg-circle:before{content:\"\\f261\"}.fa-ghost:before{content:\"\\f6e2\"}.fa-gift:before{content:\"\\f06b\"}.fa-git:before{content:\"\\f1d3\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-github:before{content:\"\\f09b\"}.fa-github-alt:before{content:\"\\f113\"}.fa-github-square:before{content:\"\\f092\"}.fa-gitkraken:before{content:\"\\f3a6\"}.fa-gitlab:before{content:\"\\f296\"}.fa-gitter:before{content:\"\\f426\"}.fa-glass-martini:before{content:\"\\f000\"}.fa-glass-martini-alt:before{content:\"\\f57b\"}.fa-glasses:before{content:\"\\f530\"}.fa-glide:before{content:\"\\f2a5\"}.fa-glide-g:before{content:\"\\f2a6\"}.fa-globe:before{content:\"\\f0ac\"}.fa-globe-africa:before{content:\"\\f57c\"}.fa-globe-americas:before{content:\"\\f57d\"}.fa-globe-asia:before{content:\"\\f57e\"}.fa-gofore:before{content:\"\\f3a7\"}.fa-golf-ball:before{content:\"\\f450\"}.fa-goodreads:before{content:\"\\f3a8\"}.fa-goodreads-g:before{content:\"\\f3a9\"}.fa-google:before{content:\"\\f1a0\"}.fa-google-drive:before{content:\"\\f3aa\"}.fa-google-play:before{content:\"\\f3ab\"}.fa-google-plus:before{content:\"\\f2b3\"}.fa-google-plus-g:before{content:\"\\f0d5\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-wallet:before{content:\"\\f1ee\"}.fa-gopuram:before{content:\"\\f664\"}.fa-graduation-cap:before{content:\"\\f19d\"}.fa-gratipay:before{content:\"\\f184\"}.fa-grav:before{content:\"\\f2d6\"}.fa-greater-than:before{content:\"\\f531\"}.fa-greater-than-equal:before{content:\"\\f532\"}.fa-grimace:before{content:\"\\f57f\"}.fa-grin:before{content:\"\\f580\"}.fa-grin-alt:before{content:\"\\f581\"}.fa-grin-beam:before{content:\"\\f582\"}.fa-grin-beam-sweat:before{content:\"\\f583\"}.fa-grin-hearts:before{content:\"\\f584\"}.fa-grin-squint:before{content:\"\\f585\"}.fa-grin-squint-tears:before{content:\"\\f586\"}.fa-grin-stars:before{content:\"\\f587\"}.fa-grin-tears:before{content:\"\\f588\"}.fa-grin-tongue:before{content:\"\\f589\"}.fa-grin-tongue-squint:before{content:\"\\f58a\"}.fa-grin-tongue-wink:before{content:\"\\f58b\"}.fa-grin-wink:before{content:\"\\f58c\"}.fa-grip-horizontal:before{content:\"\\f58d\"}.fa-grip-vertical:before{content:\"\\f58e\"}.fa-gripfire:before{content:\"\\f3ac\"}.fa-grunt:before{content:\"\\f3ad\"}.fa-gulp:before{content:\"\\f3ae\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-hacker-news:before{content:\"\\f1d4\"}.fa-hacker-news-square:before{content:\"\\f3af\"}.fa-hackerrank:before{content:\"\\f5f7\"}.fa-hammer:before{content:\"\\f6e3\"}.fa-hamsa:before{content:\"\\f665\"}.fa-hand-holding:before{content:\"\\f4bd\"}.fa-hand-holding-heart:before{content:\"\\f4be\"}.fa-hand-holding-usd:before{content:\"\\f4c0\"}.fa-hand-lizard:before{content:\"\\f258\"}.fa-hand-paper:before{content:\"\\f256\"}.fa-hand-peace:before{content:\"\\f25b\"}.fa-hand-point-down:before{content:\"\\f0a7\"}.fa-hand-point-left:before{content:\"\\f0a5\"}.fa-hand-point-right:before{content:\"\\f0a4\"}.fa-hand-point-up:before{content:\"\\f0a6\"}.fa-hand-pointer:before{content:\"\\f25a\"}.fa-hand-rock:before{content:\"\\f255\"}.fa-hand-scissors:before{content:\"\\f257\"}.fa-hand-spock:before{content:\"\\f259\"}.fa-hands:before{content:\"\\f4c2\"}.fa-hands-helping:before{content:\"\\f4c4\"}.fa-handshake:before{content:\"\\f2b5\"}.fa-hanukiah:before{content:\"\\f6e6\"}.fa-hashtag:before{content:\"\\f292\"}.fa-hat-wizard:before{content:\"\\f6e8\"}.fa-haykal:before{content:\"\\f666\"}.fa-hdd:before{content:\"\\f0a0\"}.fa-heading:before{content:\"\\f1dc\"}.fa-headphones:before{content:\"\\f025\"}.fa-headphones-alt:before{content:\"\\f58f\"}.fa-headset:before{content:\"\\f590\"}.fa-heart:before{content:\"\\f004\"}.fa-heartbeat:before{content:\"\\f21e\"}.fa-helicopter:before{content:\"\\f533\"}.fa-highlighter:before{content:\"\\f591\"}.fa-hiking:before{content:\"\\f6ec\"}.fa-hippo:before{content:\"\\f6ed\"}.fa-hips:before{content:\"\\f452\"}.fa-hire-a-helper:before{content:\"\\f3b0\"}.fa-history:before{content:\"\\f1da\"}.fa-hockey-puck:before{content:\"\\f453\"}.fa-home:before{content:\"\\f015\"}.fa-hooli:before{content:\"\\f427\"}.fa-hornbill:before{content:\"\\f592\"}.fa-horse:before{content:\"\\f6f0\"}.fa-hospital:before{content:\"\\f0f8\"}.fa-hospital-alt:before{content:\"\\f47d\"}.fa-hospital-symbol:before{content:\"\\f47e\"}.fa-hot-tub:before{content:\"\\f593\"}.fa-hotel:before{content:\"\\f594\"}.fa-hotjar:before{content:\"\\f3b1\"}.fa-hourglass:before{content:\"\\f254\"}.fa-hourglass-end:before{content:\"\\f253\"}.fa-hourglass-half:before{content:\"\\f252\"}.fa-hourglass-start:before{content:\"\\f251\"}.fa-house-damage:before{content:\"\\f6f1\"}.fa-houzz:before{content:\"\\f27c\"}.fa-hryvnia:before{content:\"\\f6f2\"}.fa-html5:before{content:\"\\f13b\"}.fa-hubspot:before{content:\"\\f3b2\"}.fa-i-cursor:before{content:\"\\f246\"}.fa-id-badge:before{content:\"\\f2c1\"}.fa-id-card:before{content:\"\\f2c2\"}.fa-id-card-alt:before{content:\"\\f47f\"}.fa-image:before{content:\"\\f03e\"}.fa-images:before{content:\"\\f302\"}.fa-imdb:before{content:\"\\f2d8\"}.fa-inbox:before{content:\"\\f01c\"}.fa-indent:before{content:\"\\f03c\"}.fa-industry:before{content:\"\\f275\"}.fa-infinity:before{content:\"\\f534\"}.fa-info:before{content:\"\\f129\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-instagram:before{content:\"\\f16d\"}.fa-internet-explorer:before{content:\"\\f26b\"}.fa-ioxhost:before{content:\"\\f208\"}.fa-italic:before{content:\"\\f033\"}.fa-itunes:before{content:\"\\f3b4\"}.fa-itunes-note:before{content:\"\\f3b5\"}.fa-java:before{content:\"\\f4e4\"}.fa-jedi:before{content:\"\\f669\"}.fa-jedi-order:before{content:\"\\f50e\"}.fa-jenkins:before{content:\"\\f3b6\"}.fa-joget:before{content:\"\\f3b7\"}.fa-joint:before{content:\"\\f595\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-journal-whills:before{content:\"\\f66a\"}.fa-js:before{content:\"\\f3b8\"}.fa-js-square:before{content:\"\\f3b9\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-kaaba:before{content:\"\\f66b\"}.fa-kaggle:before{content:\"\\f5fa\"}.fa-key:before{content:\"\\f084\"}.fa-keybase:before{content:\"\\f4f5\"}.fa-keyboard:before{content:\"\\f11c\"}.fa-keycdn:before{content:\"\\f3ba\"}.fa-khanda:before{content:\"\\f66d\"}.fa-kickstarter:before{content:\"\\f3bb\"}.fa-kickstarter-k:before{content:\"\\f3bc\"}.fa-kiss:before{content:\"\\f596\"}.fa-kiss-beam:before{content:\"\\f597\"}.fa-kiss-wink-heart:before{content:\"\\f598\"}.fa-kiwi-bird:before{content:\"\\f535\"}.fa-korvue:before{content:\"\\f42f\"}.fa-landmark:before{content:\"\\f66f\"}.fa-language:before{content:\"\\f1ab\"}.fa-laptop:before{content:\"\\f109\"}.fa-laptop-code:before{content:\"\\f5fc\"}.fa-laravel:before{content:\"\\f3bd\"}.fa-lastfm:before{content:\"\\f202\"}.fa-lastfm-square:before{content:\"\\f203\"}.fa-laugh:before{content:\"\\f599\"}.fa-laugh-beam:before{content:\"\\f59a\"}.fa-laugh-squint:before{content:\"\\f59b\"}.fa-laugh-wink:before{content:\"\\f59c\"}.fa-layer-group:before{content:\"\\f5fd\"}.fa-leaf:before{content:\"\\f06c\"}.fa-leanpub:before{content:\"\\f212\"}.fa-lemon:before{content:\"\\f094\"}.fa-less:before{content:\"\\f41d\"}.fa-less-than:before{content:\"\\f536\"}.fa-less-than-equal:before{content:\"\\f537\"}.fa-level-down-alt:before{content:\"\\f3be\"}.fa-level-up-alt:before{content:\"\\f3bf\"}.fa-life-ring:before{content:\"\\f1cd\"}.fa-lightbulb:before{content:\"\\f0eb\"}.fa-line:before{content:\"\\f3c0\"}.fa-link:before{content:\"\\f0c1\"}.fa-linkedin:before{content:\"\\f08c\"}.fa-linkedin-in:before{content:\"\\f0e1\"}.fa-linode:before{content:\"\\f2b8\"}.fa-linux:before{content:\"\\f17c\"}.fa-lira-sign:before{content:\"\\f195\"}.fa-list:before{content:\"\\f03a\"}.fa-list-alt:before{content:\"\\f022\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-lock:before{content:\"\\f023\"}.fa-lock-open:before{content:\"\\f3c1\"}.fa-long-arrow-alt-down:before{content:\"\\f309\"}.fa-long-arrow-alt-left:before{content:\"\\f30a\"}.fa-long-arrow-alt-right:before{content:\"\\f30b\"}.fa-long-arrow-alt-up:before{content:\"\\f30c\"}.fa-low-vision:before{content:\"\\f2a8\"}.fa-luggage-cart:before{content:\"\\f59d\"}.fa-lyft:before{content:\"\\f3c3\"}.fa-magento:before{content:\"\\f3c4\"}.fa-magic:before{content:\"\\f0d0\"}.fa-magnet:before{content:\"\\f076\"}.fa-mail-bulk:before{content:\"\\f674\"}.fa-mailchimp:before{content:\"\\f59e\"}.fa-male:before{content:\"\\f183\"}.fa-mandalorian:before{content:\"\\f50f\"}.fa-map:before{content:\"\\f279\"}.fa-map-marked:before{content:\"\\f59f\"}.fa-map-marked-alt:before{content:\"\\f5a0\"}.fa-map-marker:before{content:\"\\f041\"}.fa-map-marker-alt:before{content:\"\\f3c5\"}.fa-map-pin:before{content:\"\\f276\"}.fa-map-signs:before{content:\"\\f277\"}.fa-markdown:before{content:\"\\f60f\"}.fa-marker:before{content:\"\\f5a1\"}.fa-mars:before{content:\"\\f222\"}.fa-mars-double:before{content:\"\\f227\"}.fa-mars-stroke:before{content:\"\\f229\"}.fa-mars-stroke-h:before{content:\"\\f22b\"}.fa-mars-stroke-v:before{content:\"\\f22a\"}.fa-mask:before{content:\"\\f6fa\"}.fa-mastodon:before{content:\"\\f4f6\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-medal:before{content:\"\\f5a2\"}.fa-medapps:before{content:\"\\f3c6\"}.fa-medium:before{content:\"\\f23a\"}.fa-medium-m:before{content:\"\\f3c7\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-medrt:before{content:\"\\f3c8\"}.fa-meetup:before{content:\"\\f2e0\"}.fa-megaport:before{content:\"\\f5a3\"}.fa-meh:before{content:\"\\f11a\"}.fa-meh-blank:before{content:\"\\f5a4\"}.fa-meh-rolling-eyes:before{content:\"\\f5a5\"}.fa-memory:before{content:\"\\f538\"}.fa-menorah:before{content:\"\\f676\"}.fa-mercury:before{content:\"\\f223\"}.fa-microchip:before{content:\"\\f2db\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-alt:before{content:\"\\f3c9\"}.fa-microphone-alt-slash:before{content:\"\\f539\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-microscope:before{content:\"\\f610\"}.fa-microsoft:before{content:\"\\f3ca\"}.fa-minus:before{content:\"\\f068\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-minus-square:before{content:\"\\f146\"}.fa-mix:before{content:\"\\f3cb\"}.fa-mixcloud:before{content:\"\\f289\"}.fa-mizuni:before{content:\"\\f3cc\"}.fa-mobile:before{content:\"\\f10b\"}.fa-mobile-alt:before{content:\"\\f3cd\"}.fa-modx:before{content:\"\\f285\"}.fa-monero:before{content:\"\\f3d0\"}.fa-money-bill:before{content:\"\\f0d6\"}.fa-money-bill-alt:before{content:\"\\f3d1\"}.fa-money-bill-wave:before{content:\"\\f53a\"}.fa-money-bill-wave-alt:before{content:\"\\f53b\"}.fa-money-check:before{content:\"\\f53c\"}.fa-money-check-alt:before{content:\"\\f53d\"}.fa-monument:before{content:\"\\f5a6\"}.fa-moon:before{content:\"\\f186\"}.fa-mortar-pestle:before{content:\"\\f5a7\"}.fa-mosque:before{content:\"\\f678\"}.fa-motorcycle:before{content:\"\\f21c\"}.fa-mountain:before{content:\"\\f6fc\"}.fa-mouse-pointer:before{content:\"\\f245\"}.fa-music:before{content:\"\\f001\"}.fa-napster:before{content:\"\\f3d2\"}.fa-neos:before{content:\"\\f612\"}.fa-network-wired:before{content:\"\\f6ff\"}.fa-neuter:before{content:\"\\f22c\"}.fa-newspaper:before{content:\"\\f1ea\"}.fa-nimblr:before{content:\"\\f5a8\"}.fa-nintendo-switch:before{content:\"\\f418\"}.fa-node:before{content:\"\\f419\"}.fa-node-js:before{content:\"\\f3d3\"}.fa-not-equal:before{content:\"\\f53e\"}.fa-notes-medical:before{content:\"\\f481\"}.fa-npm:before{content:\"\\f3d4\"}.fa-ns8:before{content:\"\\f3d5\"}.fa-nutritionix:before{content:\"\\f3d6\"}.fa-object-group:before{content:\"\\f247\"}.fa-object-ungroup:before{content:\"\\f248\"}.fa-odnoklassniki:before{content:\"\\f263\"}.fa-odnoklassniki-square:before{content:\"\\f264\"}.fa-oil-can:before{content:\"\\f613\"}.fa-old-republic:before{content:\"\\f510\"}.fa-om:before{content:\"\\f679\"}.fa-opencart:before{content:\"\\f23d\"}.fa-openid:before{content:\"\\f19b\"}.fa-opera:before{content:\"\\f26a\"}.fa-optin-monster:before{content:\"\\f23c\"}.fa-osi:before{content:\"\\f41a\"}.fa-otter:before{content:\"\\f700\"}.fa-outdent:before{content:\"\\f03b\"}.fa-page4:before{content:\"\\f3d7\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-paint-brush:before{content:\"\\f1fc\"}.fa-paint-roller:before{content:\"\\f5aa\"}.fa-palette:before{content:\"\\f53f\"}.fa-palfed:before{content:\"\\f3d8\"}.fa-pallet:before{content:\"\\f482\"}.fa-paper-plane:before{content:\"\\f1d8\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-parachute-box:before{content:\"\\f4cd\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-parking:before{content:\"\\f540\"}.fa-passport:before{content:\"\\f5ab\"}.fa-pastafarianism:before{content:\"\\f67b\"}.fa-paste:before{content:\"\\f0ea\"}.fa-patreon:before{content:\"\\f3d9\"}.fa-pause:before{content:\"\\f04c\"}.fa-pause-circle:before{content:\"\\f28b\"}.fa-paw:before{content:\"\\f1b0\"}.fa-paypal:before{content:\"\\f1ed\"}.fa-peace:before{content:\"\\f67c\"}.fa-pen:before{content:\"\\f304\"}.fa-pen-alt:before{content:\"\\f305\"}.fa-pen-fancy:before{content:\"\\f5ac\"}.fa-pen-nib:before{content:\"\\f5ad\"}.fa-pen-square:before{content:\"\\f14b\"}.fa-pencil-alt:before{content:\"\\f303\"}.fa-pencil-ruler:before{content:\"\\f5ae\"}.fa-penny-arcade:before{content:\"\\f704\"}.fa-people-carry:before{content:\"\\f4ce\"}.fa-percent:before{content:\"\\f295\"}.fa-percentage:before{content:\"\\f541\"}.fa-periscope:before{content:\"\\f3da\"}.fa-phabricator:before{content:\"\\f3db\"}.fa-phoenix-framework:before{content:\"\\f3dc\"}.fa-phoenix-squadron:before{content:\"\\f511\"}.fa-phone:before{content:\"\\f095\"}.fa-phone-slash:before{content:\"\\f3dd\"}.fa-phone-square:before{content:\"\\f098\"}.fa-phone-volume:before{content:\"\\f2a0\"}.fa-php:before{content:\"\\f457\"}.fa-pied-piper:before{content:\"\\f2ae\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-pied-piper-hat:before{content:\"\\f4e5\"}.fa-pied-piper-pp:before{content:\"\\f1a7\"}.fa-piggy-bank:before{content:\"\\f4d3\"}.fa-pills:before{content:\"\\f484\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-p:before{content:\"\\f231\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-place-of-worship:before{content:\"\\f67f\"}.fa-plane:before{content:\"\\f072\"}.fa-plane-arrival:before{content:\"\\f5af\"}.fa-plane-departure:before{content:\"\\f5b0\"}.fa-play:before{content:\"\\f04b\"}.fa-play-circle:before{content:\"\\f144\"}.fa-playstation:before{content:\"\\f3df\"}.fa-plug:before{content:\"\\f1e6\"}.fa-plus:before{content:\"\\f067\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-podcast:before{content:\"\\f2ce\"}.fa-poll:before{content:\"\\f681\"}.fa-poll-h:before{content:\"\\f682\"}.fa-poo:before{content:\"\\f2fe\"}.fa-poop:before{content:\"\\f619\"}.fa-portrait:before{content:\"\\f3e0\"}.fa-pound-sign:before{content:\"\\f154\"}.fa-power-off:before{content:\"\\f011\"}.fa-pray:before{content:\"\\f683\"}.fa-praying-hands:before{content:\"\\f684\"}.fa-prescription:before{content:\"\\f5b1\"}.fa-prescription-bottle:before{content:\"\\f485\"}.fa-prescription-bottle-alt:before{content:\"\\f486\"}.fa-print:before{content:\"\\f02f\"}.fa-procedures:before{content:\"\\f487\"}.fa-product-hunt:before{content:\"\\f288\"}.fa-project-diagram:before{content:\"\\f542\"}.fa-pushed:before{content:\"\\f3e1\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-python:before{content:\"\\f3e2\"}.fa-qq:before{content:\"\\f1d6\"}.fa-qrcode:before{content:\"\\f029\"}.fa-question:before{content:\"\\f128\"}.fa-question-circle:before{content:\"\\f059\"}.fa-quidditch:before{content:\"\\f458\"}.fa-quinscape:before{content:\"\\f459\"}.fa-quora:before{content:\"\\f2c4\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-quran:before{content:\"\\f687\"}.fa-r-project:before{content:\"\\f4f7\"}.fa-random:before{content:\"\\f074\"}.fa-ravelry:before{content:\"\\f2d9\"}.fa-react:before{content:\"\\f41b\"}.fa-readme:before{content:\"\\f4d5\"}.fa-rebel:before{content:\"\\f1d0\"}.fa-receipt:before{content:\"\\f543\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-red-river:before{content:\"\\f3e3\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-alien:before{content:\"\\f281\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-redo:before{content:\"\\f01e\"}.fa-redo-alt:before{content:\"\\f2f9\"}.fa-registered:before{content:\"\\f25d\"}.fa-rendact:before{content:\"\\f3e4\"}.fa-renren:before{content:\"\\f18b\"}.fa-reply:before{content:\"\\f3e5\"}.fa-reply-all:before{content:\"\\f122\"}.fa-replyd:before{content:\"\\f3e6\"}.fa-researchgate:before{content:\"\\f4f8\"}.fa-resolving:before{content:\"\\f3e7\"}.fa-retweet:before{content:\"\\f079\"}.fa-rev:before{content:\"\\f5b2\"}.fa-ribbon:before{content:\"\\f4d6\"}.fa-ring:before{content:\"\\f70b\"}.fa-road:before{content:\"\\f018\"}.fa-robot:before{content:\"\\f544\"}.fa-rocket:before{content:\"\\f135\"}.fa-rocketchat:before{content:\"\\f3e8\"}.fa-rockrms:before{content:\"\\f3e9\"}.fa-route:before{content:\"\\f4d7\"}.fa-rss:before{content:\"\\f09e\"}.fa-rss-square:before{content:\"\\f143\"}.fa-ruble-sign:before{content:\"\\f158\"}.fa-ruler:before{content:\"\\f545\"}.fa-ruler-combined:before{content:\"\\f546\"}.fa-ruler-horizontal:before{content:\"\\f547\"}.fa-ruler-vertical:before{content:\"\\f548\"}.fa-running:before{content:\"\\f70c\"}.fa-rupee-sign:before{content:\"\\f156\"}.fa-sad-cry:before{content:\"\\f5b3\"}.fa-sad-tear:before{content:\"\\f5b4\"}.fa-safari:before{content:\"\\f267\"}.fa-sass:before{content:\"\\f41e\"}.fa-save:before{content:\"\\f0c7\"}.fa-schlix:before{content:\"\\f3ea\"}.fa-school:before{content:\"\\f549\"}.fa-screwdriver:before{content:\"\\f54a\"}.fa-scribd:before{content:\"\\f28a\"}.fa-scroll:before{content:\"\\f70e\"}.fa-search:before{content:\"\\f002\"}.fa-search-dollar:before{content:\"\\f688\"}.fa-search-location:before{content:\"\\f689\"}.fa-search-minus:before{content:\"\\f010\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-searchengin:before{content:\"\\f3eb\"}.fa-seedling:before{content:\"\\f4d8\"}.fa-sellcast:before{content:\"\\f2da\"}.fa-sellsy:before{content:\"\\f213\"}.fa-server:before{content:\"\\f233\"}.fa-servicestack:before{content:\"\\f3ec\"}.fa-shapes:before{content:\"\\f61f\"}.fa-share:before{content:\"\\f064\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-share-square:before{content:\"\\f14d\"}.fa-shekel-sign:before{content:\"\\f20b\"}.fa-shield-alt:before{content:\"\\f3ed\"}.fa-ship:before{content:\"\\f21a\"}.fa-shipping-fast:before{content:\"\\f48b\"}.fa-shirtsinbulk:before{content:\"\\f214\"}.fa-shoe-prints:before{content:\"\\f54b\"}.fa-shopping-bag:before{content:\"\\f290\"}.fa-shopping-basket:before{content:\"\\f291\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-shopware:before{content:\"\\f5b5\"}.fa-shower:before{content:\"\\f2cc\"}.fa-shuttle-van:before{content:\"\\f5b6\"}.fa-sign:before{content:\"\\f4d9\"}.fa-sign-in-alt:before{content:\"\\f2f6\"}.fa-sign-language:before{content:\"\\f2a7\"}.fa-sign-out-alt:before{content:\"\\f2f5\"}.fa-signal:before{content:\"\\f012\"}.fa-signature:before{content:\"\\f5b7\"}.fa-simplybuilt:before{content:\"\\f215\"}.fa-sistrix:before{content:\"\\f3ee\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-sith:before{content:\"\\f512\"}.fa-skull:before{content:\"\\f54c\"}.fa-skull-crossbones:before{content:\"\\f714\"}.fa-skyatlas:before{content:\"\\f216\"}.fa-skype:before{content:\"\\f17e\"}.fa-slack:before{content:\"\\f198\"}.fa-slack-hash:before{content:\"\\f3ef\"}.fa-slash:before{content:\"\\f715\"}.fa-sliders-h:before{content:\"\\f1de\"}.fa-slideshare:before{content:\"\\f1e7\"}.fa-smile:before{content:\"\\f118\"}.fa-smile-beam:before{content:\"\\f5b8\"}.fa-smile-wink:before{content:\"\\f4da\"}.fa-smoking:before{content:\"\\f48d\"}.fa-smoking-ban:before{content:\"\\f54d\"}.fa-snapchat:before{content:\"\\f2ab\"}.fa-snapchat-ghost:before{content:\"\\f2ac\"}.fa-snapchat-square:before{content:\"\\f2ad\"}.fa-snowflake:before{content:\"\\f2dc\"}.fa-socks:before{content:\"\\f696\"}.fa-solar-panel:before{content:\"\\f5ba\"}.fa-sort:before{content:\"\\f0dc\"}.fa-sort-alpha-down:before{content:\"\\f15d\"}.fa-sort-alpha-up:before{content:\"\\f15e\"}.fa-sort-amount-down:before{content:\"\\f160\"}.fa-sort-amount-up:before{content:\"\\f161\"}.fa-sort-down:before{content:\"\\f0dd\"}.fa-sort-numeric-down:before{content:\"\\f162\"}.fa-sort-numeric-up:before{content:\"\\f163\"}.fa-sort-up:before{content:\"\\f0de\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-spa:before{content:\"\\f5bb\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-speakap:before{content:\"\\f3f3\"}.fa-spider:before{content:\"\\f717\"}.fa-spinner:before{content:\"\\f110\"}.fa-splotch:before{content:\"\\f5bc\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-spray-can:before{content:\"\\f5bd\"}.fa-square:before{content:\"\\f0c8\"}.fa-square-full:before{content:\"\\f45c\"}.fa-square-root-alt:before{content:\"\\f698\"}.fa-squarespace:before{content:\"\\f5be\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-stamp:before{content:\"\\f5bf\"}.fa-star:before{content:\"\\f005\"}.fa-star-and-crescent:before{content:\"\\f699\"}.fa-star-half:before{content:\"\\f089\"}.fa-star-half-alt:before{content:\"\\f5c0\"}.fa-star-of-david:before{content:\"\\f69a\"}.fa-star-of-life:before{content:\"\\f621\"}.fa-staylinked:before{content:\"\\f3f5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-steam-symbol:before{content:\"\\f3f6\"}.fa-step-backward:before{content:\"\\f048\"}.fa-step-forward:before{content:\"\\f051\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-sticker-mule:before{content:\"\\f3f7\"}.fa-sticky-note:before{content:\"\\f249\"}.fa-stop:before{content:\"\\f04d\"}.fa-stop-circle:before{content:\"\\f28d\"}.fa-stopwatch:before{content:\"\\f2f2\"}.fa-store:before{content:\"\\f54e\"}.fa-store-alt:before{content:\"\\f54f\"}.fa-strava:before{content:\"\\f428\"}.fa-stream:before{content:\"\\f550\"}.fa-street-view:before{content:\"\\f21d\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-stripe:before{content:\"\\f429\"}.fa-stripe-s:before{content:\"\\f42a\"}.fa-stroopwafel:before{content:\"\\f551\"}.fa-studiovinari:before{content:\"\\f3f8\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-subscript:before{content:\"\\f12c\"}.fa-subway:before{content:\"\\f239\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-suitcase-rolling:before{content:\"\\f5c1\"}.fa-sun:before{content:\"\\f185\"}.fa-superpowers:before{content:\"\\f2dd\"}.fa-superscript:before{content:\"\\f12b\"}.fa-supple:before{content:\"\\f3f9\"}.fa-surprise:before{content:\"\\f5c2\"}.fa-swatchbook:before{content:\"\\f5c3\"}.fa-swimmer:before{content:\"\\f5c4\"}.fa-swimming-pool:before{content:\"\\f5c5\"}.fa-synagogue:before{content:\"\\f69b\"}.fa-sync:before{content:\"\\f021\"}.fa-sync-alt:before{content:\"\\f2f1\"}.fa-syringe:before{content:\"\\f48e\"}.fa-table:before{content:\"\\f0ce\"}.fa-table-tennis:before{content:\"\\f45d\"}.fa-tablet:before{content:\"\\f10a\"}.fa-tablet-alt:before{content:\"\\f3fa\"}.fa-tablets:before{content:\"\\f490\"}.fa-tachometer-alt:before{content:\"\\f3fd\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-tape:before{content:\"\\f4db\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-taxi:before{content:\"\\f1ba\"}.fa-teamspeak:before{content:\"\\f4f9\"}.fa-teeth:before{content:\"\\f62e\"}.fa-teeth-open:before{content:\"\\f62f\"}.fa-telegram:before{content:\"\\f2c6\"}.fa-telegram-plane:before{content:\"\\f3fe\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-terminal:before{content:\"\\f120\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-th:before{content:\"\\f00a\"}.fa-th-large:before{content:\"\\f009\"}.fa-th-list:before{content:\"\\f00b\"}.fa-the-red-yeti:before{content:\"\\f69d\"}.fa-theater-masks:before{content:\"\\f630\"}.fa-themeco:before{content:\"\\f5c6\"}.fa-themeisle:before{content:\"\\f2b2\"}.fa-thermometer:before{content:\"\\f491\"}.fa-thermometer-empty:before{content:\"\\f2cb\"}.fa-thermometer-full:before{content:\"\\f2c7\"}.fa-thermometer-half:before{content:\"\\f2c9\"}.fa-thermometer-quarter:before{content:\"\\f2ca\"}.fa-thermometer-three-quarters:before{content:\"\\f2c8\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbtack:before{content:\"\\f08d\"}.fa-ticket-alt:before{content:\"\\f3ff\"}.fa-times:before{content:\"\\f00d\"}.fa-times-circle:before{content:\"\\f057\"}.fa-tint:before{content:\"\\f043\"}.fa-tint-slash:before{content:\"\\f5c7\"}.fa-tired:before{content:\"\\f5c8\"}.fa-toggle-off:before{content:\"\\f204\"}.fa-toggle-on:before{content:\"\\f205\"}.fa-toilet-paper:before{content:\"\\f71e\"}.fa-toolbox:before{content:\"\\f552\"}.fa-tooth:before{content:\"\\f5c9\"}.fa-torah:before{content:\"\\f6a0\"}.fa-torii-gate:before{content:\"\\f6a1\"}.fa-tractor:before{content:\"\\f722\"}.fa-trade-federation:before{content:\"\\f513\"}.fa-trademark:before{content:\"\\f25c\"}.fa-traffic-light:before{content:\"\\f637\"}.fa-train:before{content:\"\\f238\"}.fa-transgender:before{content:\"\\f224\"}.fa-transgender-alt:before{content:\"\\f225\"}.fa-trash:before{content:\"\\f1f8\"}.fa-trash-alt:before{content:\"\\f2ed\"}.fa-tree:before{content:\"\\f1bb\"}.fa-trello:before{content:\"\\f181\"}.fa-tripadvisor:before{content:\"\\f262\"}.fa-trophy:before{content:\"\\f091\"}.fa-truck:before{content:\"\\f0d1\"}.fa-truck-loading:before{content:\"\\f4de\"}.fa-truck-monster:before{content:\"\\f63b\"}.fa-truck-moving:before{content:\"\\f4df\"}.fa-truck-pickup:before{content:\"\\f63c\"}.fa-tshirt:before{content:\"\\f553\"}.fa-tty:before{content:\"\\f1e4\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-tv:before{content:\"\\f26c\"}.fa-twitch:before{content:\"\\f1e8\"}.fa-twitter:before{content:\"\\f099\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-typo3:before{content:\"\\f42b\"}.fa-uber:before{content:\"\\f402\"}.fa-uikit:before{content:\"\\f403\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-umbrella-beach:before{content:\"\\f5ca\"}.fa-underline:before{content:\"\\f0cd\"}.fa-undo:before{content:\"\\f0e2\"}.fa-undo-alt:before{content:\"\\f2ea\"}.fa-uniregistry:before{content:\"\\f404\"}.fa-universal-access:before{content:\"\\f29a\"}.fa-university:before{content:\"\\f19c\"}.fa-unlink:before{content:\"\\f127\"}.fa-unlock:before{content:\"\\f09c\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-untappd:before{content:\"\\f405\"}.fa-upload:before{content:\"\\f093\"}.fa-usb:before{content:\"\\f287\"}.fa-user:before{content:\"\\f007\"}.fa-user-alt:before{content:\"\\f406\"}.fa-user-alt-slash:before{content:\"\\f4fa\"}.fa-user-astronaut:before{content:\"\\f4fb\"}.fa-user-check:before{content:\"\\f4fc\"}.fa-user-circle:before{content:\"\\f2bd\"}.fa-user-clock:before{content:\"\\f4fd\"}.fa-user-cog:before{content:\"\\f4fe\"}.fa-user-edit:before{content:\"\\f4ff\"}.fa-user-friends:before{content:\"\\f500\"}.fa-user-graduate:before{content:\"\\f501\"}.fa-user-injured:before{content:\"\\f728\"}.fa-user-lock:before{content:\"\\f502\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-user-minus:before{content:\"\\f503\"}.fa-user-ninja:before{content:\"\\f504\"}.fa-user-plus:before{content:\"\\f234\"}.fa-user-secret:before{content:\"\\f21b\"}.fa-user-shield:before{content:\"\\f505\"}.fa-user-slash:before{content:\"\\f506\"}.fa-user-tag:before{content:\"\\f507\"}.fa-user-tie:before{content:\"\\f508\"}.fa-user-times:before{content:\"\\f235\"}.fa-users:before{content:\"\\f0c0\"}.fa-users-cog:before{content:\"\\f509\"}.fa-ussunnah:before{content:\"\\f407\"}.fa-utensil-spoon:before{content:\"\\f2e5\"}.fa-utensils:before{content:\"\\f2e7\"}.fa-vaadin:before{content:\"\\f408\"}.fa-vector-square:before{content:\"\\f5cb\"}.fa-venus:before{content:\"\\f221\"}.fa-venus-double:before{content:\"\\f226\"}.fa-venus-mars:before{content:\"\\f228\"}.fa-viacoin:before{content:\"\\f237\"}.fa-viadeo:before{content:\"\\f2a9\"}.fa-viadeo-square:before{content:\"\\f2aa\"}.fa-vial:before{content:\"\\f492\"}.fa-vials:before{content:\"\\f493\"}.fa-viber:before{content:\"\\f409\"}.fa-video:before{content:\"\\f03d\"}.fa-video-slash:before{content:\"\\f4e2\"}.fa-vihara:before{content:\"\\f6a7\"}.fa-vimeo:before{content:\"\\f40a\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-vimeo-v:before{content:\"\\f27d\"}.fa-vine:before{content:\"\\f1ca\"}.fa-vk:before{content:\"\\f189\"}.fa-vnv:before{content:\"\\f40b\"}.fa-volleyball-ball:before{content:\"\\f45f\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-mute:before{content:\"\\f6a9\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-up:before{content:\"\\f028\"}.fa-vuejs:before{content:\"\\f41f\"}.fa-walking:before{content:\"\\f554\"}.fa-wallet:before{content:\"\\f555\"}.fa-warehouse:before{content:\"\\f494\"}.fa-weebly:before{content:\"\\f5cc\"}.fa-weibo:before{content:\"\\f18a\"}.fa-weight:before{content:\"\\f496\"}.fa-weight-hanging:before{content:\"\\f5cd\"}.fa-weixin:before{content:\"\\f1d7\"}.fa-whatsapp:before{content:\"\\f232\"}.fa-whatsapp-square:before{content:\"\\f40c\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-whmcs:before{content:\"\\f40d\"}.fa-wifi:before{content:\"\\f1eb\"}.fa-wikipedia-w:before{content:\"\\f266\"}.fa-wind:before{content:\"\\f72e\"}.fa-window-close:before{content:\"\\f410\"}.fa-window-maximize:before{content:\"\\f2d0\"}.fa-window-minimize:before{content:\"\\f2d1\"}.fa-window-restore:before{content:\"\\f2d2\"}.fa-windows:before{content:\"\\f17a\"}.fa-wine-bottle:before{content:\"\\f72f\"}.fa-wine-glass:before{content:\"\\f4e3\"}.fa-wine-glass-alt:before{content:\"\\f5ce\"}.fa-wix:before{content:\"\\f5cf\"}.fa-wizards-of-the-coast:before{content:\"\\f730\"}.fa-wolf-pack-battalion:before{content:\"\\f514\"}.fa-won-sign:before{content:\"\\f159\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-wordpress-simple:before{content:\"\\f411\"}.fa-wpbeginner:before{content:\"\\f297\"}.fa-wpexplorer:before{content:\"\\f2de\"}.fa-wpforms:before{content:\"\\f298\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-x-ray:before{content:\"\\f497\"}.fa-xbox:before{content:\"\\f412\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-y-combinator:before{content:\"\\f23b\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-yandex:before{content:\"\\f413\"}.fa-yandex-international:before{content:\"\\f414\"}.fa-yelp:before{content:\"\\f1e9\"}.fa-yen-sign:before{content:\"\\f157\"}.fa-yin-yang:before{content:\"\\f6ad\"}.fa-yoast:before{content:\"\\f2b1\"}.fa-youtube:before{content:\"\\f167\"}.fa-youtube-square:before{content:\"\\f431\"}.fa-zhihu:before{content:\"\\f63f\"}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}@font-face{font-family:\"Font Awesome 5 Brands\";font-style:normal;font-weight:normal;src:url(../webfonts/fa-brands-400.eot);src:url(../webfonts/fa-brands-400.eot?#iefix) format(\"embedded-opentype\"),url(../webfonts/fa-brands-400.woff2) format(\"woff2\"),url(../webfonts/fa-brands-400.woff) format(\"woff\"),url(../webfonts/fa-brands-400.ttf) format(\"truetype\"),url(../webfonts/fa-brands-400.svg#fontawesome) format(\"svg\")}.fab{font-family:\"Font Awesome 5 Brands\"}@font-face{font-family:\"Font Awesome 5 Free\";font-style:normal;font-weight:400;src:url(../webfonts/fa-regular-400.eot);src:url(../webfonts/fa-regular-400.eot?#iefix) format(\"embedded-opentype\"),url(../webfonts/fa-regular-400.woff2) format(\"woff2\"),url(../webfonts/fa-regular-400.woff) format(\"woff\"),url(../webfonts/fa-regular-400.ttf) format(\"truetype\"),url(../webfonts/fa-regular-400.svg#fontawesome) format(\"svg\")}.far{font-weight:400}@font-face{font-family:\"Font Awesome 5 Free\";font-style:normal;font-weight:900;src:url(../webfonts/fa-solid-900.eot);src:url(../webfonts/fa-solid-900.eot?#iefix) format(\"embedded-opentype\"),url(../webfonts/fa-solid-900.woff2) format(\"woff2\"),url(../webfonts/fa-solid-900.woff) format(\"woff\"),url(../webfonts/fa-solid-900.ttf) format(\"truetype\"),url(../webfonts/fa-solid-900.svg#fontawesome) format(\"svg\")}.fa,.far,.fas{font-family:\"Font Awesome 5 Free\"}.fa,.fas{font-weight:900}","link":"/cdn/fontawesome/css/all.css"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/04/hello-world.html"},{"title":"Ubuntu 16.04 下安装 zsh 和 oh-my-zsh","text":"一个能使你命令行变得漂亮的工具！ 提示：Mac系统下是默认安装了zsh，linux没有安装，所以需要自行安装 1.安装zsh12apt updateapt install zsh -y 2.改变默认shell为zsh1chsh -s /bin/zsh 3.解决chsh: PAM: Authentication failure，直接修改用户配置，把bash改成zsh12345sudo vim /etc/passwd root:x:0:0:root:/root:/usr/bin/bash![](https://leanote.com/api/file/getImage?fileId=5adc5f05ab644172bd00105b) 4.安装Git1apt install git -y 5.安装oh-my-zsh官网安装oh-my-zsh是更好的去安装插件，以便提高效率 1sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" 安装完成，插件的安装请看我的另一篇文章 macOS-High-Sierra-10-13-3全新搭建PHP开发环境 6.卸载oh-my-zsh如果你想卸载oh-my-zsh, 只需要执行uninstall_oh_my_zsh zsh， 从命令行运行. 这将删除本身和恢复你以前的bash或者zsh配置 123uninstall_oh_my_zsh zsh或者sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/uninstall.sh)\"","link":"/2019/04/ubuntu-install-oh-my-zsh.html"},{"title":"macOS High Sierra 10.13.3全新搭建PHP开发环境","text":"用了快三年的Mac Pro出现问题，苹果公司帮忙换了一台全新的，所以没办法，只能重新装环境，装平时开发所需的各种软件，本着乐于助人的雷锋精神也把这次搭建写出来，希望可以帮助更多人。 废话不多说进入正题 macOS Sierra 已经帮我们预装了 Ruby、PHP、Perl、Python 等常用的脚本语言，以及 Apache 服务器等等。 1.安装 XcodeXcode 是苹果出品的包含一系列工具及库的开发软件。通过 App Store 安装最新版本的 Xcode。（如果你的Xcode是8.2之前的版本的话，在你编译PHP7.0+的时候会提示你“更新Xcode”版本）我们一般不会用 Xcode 来开发 PHP 项目。但这一步也是必需的，因为 Xcode 会帮你附带安装一些如 Git 等必要的软件。当然你也可以通过源码包安装 GitN多软件包都基于Xcode，既然必须要安装，所以我就把这个安装放在第一步。 安装成功，哎公司网络比较差，只能晚上回家安装，大概等了2小时吧，size 5G左右，所以网络不好就提前安装一下吧。 2.安装 Xcode Command Line Tools这一步会帮你安装许多常见的基于 Unix 的工具。Xcode 命令行工具作为 Xcode 的一部分，包含了 GCC 编译器。在命令行中执行以下命令即可安装： 1xcode-select --install 直接点击install，然后等待安装完成就好，哎等待总是漫长的。Verify that you’ve successfully installed Xcode Command Line Tools: 123xcode-select -p返回以下表示安装成功/Applications/Xcode.app/Contents/Developer 3.安装 HomebrewHomeBrew 是macOS 软件包管理器，用来安装、升级以及卸载常用的软件 1/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 及时按回车键然后输入开机密码，等待安装完成有时homebrew核心仓库没有我们所要的安装包，但在其他仓库中有，那我们可以自己添加 1234homebrew扩展仓库* 列出已有仓库：` brew tap`* 添加仓库：` brew tap 仓库名 `* 删除仓库：` brew untap 仓库名` 安装完成后，我们可以考虑更改下 Homebrew 源，因为国外源一直不是很给力，这里我们将 Homebrew 源改为中国科学技术大学开源软件镜像： 12cd &quot;$(brew --repo)&quot;git remote set-url origin https://mirrors.ustc.edu.cn/brew.git 4. 安装iTerm2iTerm2 是 MAC 下最好的终端工具（没有之一）以及配合oh-my-zsh 及其插件，将是强大的神器下载iTerm2,打开会提示移动到application，或者在 Finder 中，将 iTerm 拖拽进入 Application 文件夹中。这样，你可以在 Launchpad 中启动 iTerm2。 4.1 安装 oh-my-zsh接下来安装配合iTerm2使用的oh-my-zsh首先查看系统支持的shell列表，Mac 系统自带了 zsh ，Linux上得安装 12cat /etc/shells zsh --version //查看版本 虽然Mac自带了zsh，如果你想要最新版的zsh，那么你用 brew install zsh 安装一个最新的吧（问题不大） 1sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot; 哇哦，iTerm2的界面瞬间舒服多了，有没有、有没有、有没有？（哈哈哈哈哈哈） 不过默认的theme主题”robbyrussell”用起来感觉还是差了那么一点点，大多数coder都比较喜欢 agnoster.zsh-theme 这个主题 各种主题 12345vim ~/.zshrc //打开这个配置文件ZSH_THEME=&quot;robbyrussell&quot; 找到这行主题配置更换成以下的主题名就好ZSH_THEME=&quot;agnoster&quot; # (this is one of the fancy ones)# see https://github.com/robbyrussell/oh-my-zsh/wiki/Themes#agnoster 打开一个新终端看看目前是什么样的一个主题，不过貌似有一点不对，有一些字符不能正常显示，so我们来安装一个字体 Powerline fonts 12345678# clonegit clone https://github.com/powerline/fonts.git --depth=1# installcd fonts./install.sh# clean-up a bitcd ..rm -rf fonts 然后到iterm2的preferences &gt; profiles &gt; colors 配色设置选择一个(我比较喜欢这种类型的颜色)http://ethanschoonover.com/solarized 配色主题继续修改字体，改成刚安装成功的字体 然后重开一个终端，发现会带上自己mac的用户名什么的，个人感觉挺多余的，so我自己来改变一下首先进到存放主题的文件夹》复制agnoster.zsh-theme &gt; myagnoster.zsh-theme 123456789101112131415161718192021cd ~/.oh-my-zsh/themes //进入主题文件夹 cp agnoster.zsh-theme myagnoster.zsh-theme //复制一份vim myagnoster.zsh-theme 打开 ## Main promptbuild_prompt() { RETVAL=$? prompt_status prompt_virtualenv #prompt_context prompt_dir prompt_git prompt_hg prompt_end}只需把prompt_context用#注释掉即可 然后打开.zshrc ZSH_THEME=&quot;agnoster&quot; 》 ZSH_THEME=&quot;myagnoster&quot; 改成这样就可以了 这样做的原因是避免升级有冲突 4.2 插件oh my zsh 自带插件Oh My Zsh 本身自带了很多插件，比如说: git, autojump osx, 不过基本都没有启用，插件目录: ~/.oh-my-zsh/plugins 4.2.1 安装 zsh-syntax-highlighting这个自动高亮效果的插件也是配合oh-my-zsh使用 Oh-my-zsh插件形式的安装，还有更多安装方式大家可以去探索一下 Clone this repository in oh-my-zsh’s plugins directory: 1git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting Activate the plugin in ~/.zshrc: 1plugins=( [plugins...] zsh-syntax-highlighting) Source ~/.zshrc to take changes into account: 1source ~/.zshrc 命令可以正确高亮显示咯，这样可以避免命令输错的情况，是不是很智能 4.2.2 安装 zsh-autosuggestionsOh My Zsh 插件形式安装 Clone this repository into $ZSH_CUSTOM/plugins (by default ~/.oh-my-zsh/custom/plugins) 1git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions Add the plugin to the list of plugins for Oh My Zsh to load: 1plugins=(zsh-autosuggestions) Source ~/.zshrc 1source ~/.zshrc 4.2.3 安装 autojumpautojump是一个命令行工具，它可以使用快捷命令，直接跳转到配置好的目录，而不用管现在身在何处，依赖zsh。OS XHomebrew is the recommended installation method for Mac OS X:（之前已经安装homebrew） 12345678910brew install autojumpvim ~/.zshrcplugins=( [plugins...] autojump) 添加autojump到.zshrc的plugins新添加一行[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] &amp;&amp; . $(brew --prefix)/etc/profile.d/autojump.sh查看权重j --stat 然后新开一个终端就已经可以使用啦 4.3 iterm快捷键123456789101112131415open . 在当前目录下打开finder⌘ + return 全屏⌘ + f 所查找的内容会被自动复制⌘ + d 横着分屏 / ⌘ + shift + d 竖着分屏令⌘ + / 光标位置⌘ + r 只是换到新一屏，不会像 clear 一样创建一个空屏ctrl + u 清除当前行ctrl + a 到行首ctrl + e 到行尾ctrl + w 删除光标之前的单词ctrl + k 删除到文本末尾⌘ + alt + 方向键 切换屏幕(用于hotkey window)⌘ + 方向键 切换tabctrl + _ Undoctrl + y Paste the last thing to be cut 4.4 oh-my-zsh git插件别名12345678910111213141516171819202122alias ga='git add'alias gb='git branch'alias gba='git branch -a'alias gbd='git branch -d'alias gcam='git commit -a -m'alias gcb='git checkout -b'alias gco='git checkout'alias gcm='git checkout master'alias gcp='git cherry-pick'alias gd='git diff'alias gfo='git fetch origin'alias ggpush='git push origin $(git_current_branch)'alias ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'alias glgp='git log --stat -p'alias gm='git merge'alias gp='git push'alias gst='git status'alias gsta='git stash save'alias gstp='git stash pop'alias gl='git pull'alias glg='git log --stat'alias glgp='git log --stat -p' 5. 安装 PHPMac最新的系统已经自带php，个人比较喜欢安装最新的，所以这边升级一下 12345678910brew search php // 先搜索一下brew install php // 安装，等待安装完成新开一个tab输入php -v就可以看到最新版本了加入开机自启ln -sfv /usr/local/opt/php/*.plist ~/Library/LaunchAgents如需切换PHP版本，可以使用 brew-php-switcher 6. 安装 ComposerDependency Manager for PHP, PHP 的一个依赖管理工具 123brew search composerbrew install composer 安装成功啦，之后我们就可以通过composer来安装PHP的一些扩展包 7. 安装 Mysql123456789101112131415161718192021brew install mysql //安装安装成功如下：We've installed your MySQL database without a root password. To secure it run: mysql_secure_installation MySQL is configured to only allow connections from localhost by default To connect run: mysql -uroot To have launchd start mysql now and restart at login: brew services start mysqlOr, if you don't want/need a background service you can just run: mysql.server start启动：mysql.server start加入开机自启ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents 运行密码配置//运行mysql_secure_installation 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566mysql_secure_installation Securing the MySQL server deployment. Connecting to MySQL using a blank password. VALIDATE PASSWORD PLUGIN can be used to test passwords //密码验证插件，为了提高安全性，需要验证密码and improve security. It checks the strength of password // 它会检查密码的强度and allows the users to set only those passwords which are //只允许用户设置足够安全的密码secure enough. Would you like to setup VALIDATE PASSWORD plugin? //你确定要安装验证密码插件吗? Press y|Y for Yes, any other key for No: y //确定安装 There are three levels of password validation policy: //三个等级的验证策略 LOW Length &gt;= 8 //最小长度大于等于8个字符MEDIUM Length &gt;= 8, numeric, mixed case, and special characters //数字，字母，特殊字符 混合，具体的应该是至少1个数字，1个字母，1个特殊字符，长度不超过32个字符STRONG Length &gt;= 8, numeric, mixed case, special characters and dictionary file // 最严格，加上了，字典文件 Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 0 //这里我选择0最简单的，Please set the password for root here. New password: //输入密码 Re-enter new password: //重复输入密码 Estimated strength of the password: 50 //密码强度的评级Do you wish to continue with the password provided?(Press y|Y for Yes, any other key for No) : y //是否使用刚输入的密码？By default, a MySQL installation has an anonymous user, //默认情况下，MySQL有一个匿名用户，allowing anyone to log into MySQL without having to have //这个匿名用户，不必有一个用户为他们创建，匿名用户允许任何人登录到MySQL，a user account created for them. This is intended only for //这只是为了方便测试使用testing, and to make the installation go a bit smoother.You should remove them before moving into a production //在正式环境使用的时候，建议你移除它environment. Remove anonymous users? (Press y|Y for Yes, any other key for No) : y //提示移除匿名用户Success. Normally, root should only be allowed to connect from //一般情况下，root用户只允许使用&quot;localhost&quot;方式登录，'localhost'. This ensures that someone cannot guess at the root password from the network. // 以此确保，不能被某些人通过网络的方式访问 Disallow root login remotely? (Press y|Y for Yes, any other key for No) : no //不允许root远程登陆？ ... skipping.By default, MySQL comes with a database named 'test' that //默认情况下，MySQL数据库中anyone can access. This is also intended only for testing, //这也仅仅是为了测试and should be removed before moving into a production // 在正式环境下，应该移除掉environment. Remove test database and access to it? (Press y|Y for Yes, any other key for No) : y //确认删除test数据库？ - Dropping test database...Success. - Removing privileges on test database...Success. Reloading the privilege tables will ensure that all changesmade so far will take effect immediately. //刷新权限表，以确保所有的修改可以立刻生效 Reload privilege tables now? (Press y|Y for Yes, any other key for No) : y //确认刷新Success. All done! 8. 安装 Laravel Valet这边我说明一下，本该安装 NGINX，因为我所接触的项目都是 laravel 或者 lumen，所以我这边安装这个 laravel 官方支持的 valet 开发环境，这个其实本身就是运用的 nginx，只是使用这个开发环境，开发 laravel 的很多项目就非常方便，我个人也比较建议使用，目前支持 Mac 和 linux 系统。前面已经安装php和composer，这边就可以直接安装 123composer global require laravel/valet //先获取项目valet install //然后安装ping foobar.test //ping一下是否通 在家目录创建Sites文件夹，之后所有项目都放在这个文件夹中，访问的话也是文件夹名+.test就可以了 123456mkdir ~/Sitescd ~/Sitesvalet park //将这个目录设置为项目仓库valet path //查看valet 仓库路径这样就可以以这样的 http://blog.test 域名访问了 如果有切换PHP版本需求的用户，我觉得这个 brew-php-switcher 可能会比较适合 9. 安装 Redis123456789101112brew search redisbrew install redis默认配置在/usr/local/etc/redis.confredis-server设置开机启动ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents使用launchctl启动redis serverlaunchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist","link":"/2019/04/macos-high-sierra-install-php-environment.html"},{"title":"RabbitMQ的应用场景以及基本原理介绍","text":"RabbitMQ 是一个由 erlang 开发的 AMQP(Advanced Message Queuing Protocol)的开源实现。 AMQP：高级消息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计。消息中间件主要用于组件之间的解耦，消息的发送者无需知道消息使用者的存在，反之亦然。 AMQP的主要特征是面向消息、队列、路由（包括点对点和发布/订阅）、可靠性、安全。 RabbitMQ是一个开源的AMQP实现，服务器端用Erlang语言编写，支持多种客户端，如：Python、Ruby、.NET、Java、JMS、C、PHP、ActionScript、XMPP、STOMP等，支持AJAX。用于在分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗。 一、应用场景 异步处理 应用解耦 流量削峰 二、RabbitMQ 特性RabbitMQ 最初起源于金融系统，用于在分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗。具体特点包括： 1234567891011121314151617181920212223242526 # 可靠性（Reliability）RabbitMQ 使用一些机制来保证可靠性，如持久化、传输确认、发布确认。 # 灵活的路由（Flexible Routing）在消息进入队列之前，通过 Exchange 来路由消息的。对于典型的路由功能，RabbitMQ 已经提供了一些内置的 Exchange 来实现。针对更复杂的路由功能，可以将多个 Exchange 绑定在一起，也通过插件机制实现自己的 Exchange 。 # 消息集群（Clustering）多个 RabbitMQ 服务器可以组成一个集群，形成一个逻辑 Broker 。 # 高可用（Highly Available Queues）队列可以在集群中的机器上进行镜像，使得在部分节点出问题的情况下队列仍然可用。 # 多种协议（Multi-protocol）RabbitMQ 支持多种消息队列协议，比如 STOMP、MQTT 等等。 # 多语言客户端（Many Clients）RabbitMQ 几乎支持所有常用语言，比如 Java、.NET、Ruby 等等。 # 管理界面（Management UI）RabbitMQ 提供了一个易用的用户界面，使得用户可以监控和管理消息 Broker 的许多方面。 # 跟踪机制（Tracing）如果消息异常，RabbitMQ 提供了消息跟踪机制，使用者可以找出发生了什么。 # 插件机制（Plugin System）RabbitMQ 提供了许多插件，来从多方面进行扩展，也可以编写自己的插件。 三、RabbitMQ 基本概念1234567891011121314151617181920212223242526272829303132 # Message消息，消息是不具名的，它由消息头和消息体组成。消息体是不透明的，而消息头则由一系列的可选属性组成，这些属性包括routing-key（路由键）、priority（相对于其他消息的优先权）、delivery-mode（指出该消息可能需要持久性存储）等。 # Publisher消息的生产者，也是一个向交换器发布消息的客户端应用程序。 # Exchange交换器，用来接收生产者发送的消息并将这些消息路由给服务器中的队列。 # Routing Key路由关键字,exchange根据这个关键字进行消息投递。 # Binding绑定，用于消息队列和交换器之间的关联。一个绑定就是基于路由键将交换器和消息队列连接起来的路由规则，所以可以将交换器理解成一个由绑定构成的路由表。 # Queue消息队列，用来保存消息直到发送给消费者。它是消息的容器，也是消息的终点。一个消息可投入一个或多个队列。消息一直在队列里面，等待消费者连接到这个队列将其取走。 # Connection网络连接，比如一个TCP连接。 # Channel信道，多路复用连接中的一条独立的双向数据流通道。信道是建立在真实的TCP连接内地虚拟连接，AMQP 命令都是通过信道发出去的，不管是发布消息、订阅队列还是接收消息，这些动作都是通过信道完成。因为对于操作系统来说建立和销毁 TCP 都是非常昂贵的开销，所以引入了信道的概念，以复用一条 TCP 连接。 # Consumer消息的消费者，表示一个从消息队列中取得消息的客户端应用程序。 # Virtual Host虚拟主机，表示一批交换器、消息队列和相关对象。虚拟主机是共享相同的身份认证和加密环境的独立服务器域。每个 vhost 本质上就是一个 mini 版的 RabbitMQ 服务器，拥有自己的队列、交换器、绑定和权限机制。vhost 是 AMQP 概念的基础，必须在连接时指定，RabbitMQ 默认的 vhost 是 / 。 # Broker表示消息队列服务器实体。它提供一种传输服务,它的角色就是维护一条从生产者到消费者的路线，保证数据能按照指定的方式进行传输, 四、Exchange 类型Exchange分发消息时根据类型的不同分发策略有区别，目前共四种类型：direct、fanout、topic、headers 。headers 匹配 AMQP 消息的 header 而不是路由键，此外 headers 交换器和 direct 交换器完全一致，但性能差很多，目前几乎用不到了，所以直接看另外三种类型： direct 消息中的路由键（routing key）如果和 Binding 中的 binding key 一致， 交换器就将消息发到对应的队列中。路由键与队列名完全匹配，如果一个队列绑定到交换机要求路由键为“dog”，则只转发 routing key 标记为“dog”的消息，不会转发“dog.puppy”，也不会转发“dog.guard”等等。它是完全匹配、单播的模式。 fanout 每个发到 fanout 类型交换器的消息都会分到所有绑定的队列上去。fanout 交换器不处理路由键，只是简单的将队列绑定到交换器上，每个发送到交换器的消息都会被转发到与该交换器绑定的所有队列上。很像子网广播，每台子网内的主机都获得了一份复制的消息。fanout 类型转发消息是最快的。 topic topic 交换器通过模式匹配分配消息的路由键属性，将路由键和某个模式进行匹配，此时队列需要绑定到一个模式上。它将路由键和绑定键的字符串切分成单词，这些单词之间用点隔开。它同样也会识别两个通配符：符号“#”和符号“”。#匹配0个或多个单词，匹配不多不少一个单词。 五、ConnectionFactory、Connection、ChannelConnectionFactory、Connection、Channel都是RabbitMQ对外提供的API中最基本的对象。 Connection 是 RabbitMQ 的 socket 链接，它封装了socket 协议相关部分逻辑。 ConnectionFactory 为 Connection 的制造工厂。 Channel 是我们与 RabbitMQ 打交道的最重要的一个接口，我们大部分的业务操作是在 Channel 这个接口中完成的，包括定义Queue、定义Exchange、绑定 Queue 与 Exchange、发布消息等。 六、任务分发机制1、Round-robin dispathching循环分发RabbbitMQ的分发机制非常适合扩展,而且它是专门为并发程序设计的,如果现在load加重,那么只需要创建更多的Consumer来进行任务处理 2、Message acknowledgment 消息 确认在实际应用中，可能会发生消费者收到 Queue 中的消息，但没有处理完成就宕机（或出现其他意外）的情况，这种情况下就可能会导致消息丢失。为了避免这种情况发生，我们可以要求消费者在消费完消息后发送一个回执给 RabbitMQ，RabbitMQ 收到消息回执（Message acknowledgment）后才将该消息从Queue中移除；如果 RabbitMQ 没有收到回执并检测到消费者的 RabbitMQ连接断开，则RabbitMQ会将该消息发送给其他消费者（如果存在多个消费者）进行处理。这里不存在timeout概念，一个消费者处理消息时间再长也不会导致该消息被发送给其他消费者，除非它的RabbitMQ连接断开。 这里会产生另外一个问题，如果我们的开发人员在处理完业务逻辑后，忘记发送回执给RabbitMQ，这将会导致严重的bug——Queue中堆积的消息会越来越多；消费者重启后会重复消费这些消息并重复执行业务逻辑…另外pub message是没有ack的。 3、Message durability 消息持久化如果我们希望即使在RabbitMQ服务重启的情况下，也不会丢失消息，我们可以将Queue与Message都设置为可持久化的（durable），这样可以保证绝大部分情况下我们的RabbitMQ消息不会丢失。但依然解决不了小概率丢失事件的发生（比如RabbitMQ服务器已经接收到生产者的消息，但还没来得及持久化该消息时RabbitMQ服务器就断电了），如果我们需要对这种小概率事件也要管理起来，那么我们要用到事务。由于这里仅为RabbitMQ的简单介绍，所以这里将不讲解RabbitMQ相关的事务。要持久化队列queue的持久化需要在声明时指定durable=True;这里要注意,队列的名字一定要是Broker中不存在的,不然不能改变此队列的任何属性.队列和交换机有一个创建时候指定的标志durable,durable的唯一含义就是具有这个标志的队列和交换机会在重启之后重新建立,它不表示说在队列中的消息会在重启后恢复消息持久化包括3部分 12345678910 # 1.exchange持久化,在声明时指定durable =&gt; truehannel.ExchangeDeclare(ExchangeName,\"direct\",durable:true,autoDelete:false,arguments:null);//声明消息队列，且为可持久化的 # 2.queue持久化,在声明时指定durable =&gt; truechannel.QueueDeclare(QueueName,durable:true,exclusive:false,autoDelete:false,arguments:null);//声明消息队列，且为可持久化的 # 3.消息持久化,在投递时指定delivery_mode =&gt; 2(1是非持久化).channel.basic_publish(exchange='',routing_key=\"task_queue\",body=message,properties=pika.BasicProperties(delivery_mode = 2, # make message persistent)) 如果 exchange 和 queue 都是持久化的,那么它们之间的binding 也是持久化的,如果 exchange 和 queue 两者之间有一个持久化，一个非持久化,则不允许建立绑定.注意：一旦创建了队列和交换机,就不能修改其标志了,例如,创建了一个non-durable的队列,然后想把它改变成durable的,唯一的办法就是删除这个队列然后重现创建。 关于持久化的进一步讨论：为了数据不丢失，我们采用了：在数据处理结束后发送ack，这样RabbitMQ Server会认为Message Deliver 成功。持久化queue，可以防止RabbitMQ Server 重启或者crash引起的数据丢失。持久化Message，理由同上。 但是这样能保证数据100%不丢失吗？答案是否定的。问题就在与RabbitMQ 需要时间去把这些信息存到磁盘上，这个time window 虽然短，但是它的确还是有。在这个时间窗口内如果数据没有保存，数据还会丢失。还有另一个原因就是 RabbitMQ 并不是为每个 Message 都做 fsync：它可能仅仅是把它保存到Cache 里，还没来得及保存到物理磁盘上。因此这个持久化还是有问题。但是对于大多数应用来说，这已经足够了。当然为了保持一致性，你可以把每次的publish放到一个transaction中。这个transaction的实现需要user defined codes。那么商业系统会做什么呢？一种可能的方案是在系统异常重启时或者断电时，应该给各个应用留出时间去flash cache，保证每个应用都能 exit gracefully。 4、Fair dispath 公平分发你可能也注意到了,分发机制不是那么优雅,默认状态下,RabbitMQ将第n个Message分发给第n个Consumer。n是取余后的,它不管Consumer是否还有unacked Message，只是按照这个默认的机制进行分发.那么如果有个Consumer工作比较重,那么就会导致有的Consumer基本没事可做,有的Consumer却毫无休息的机会,那么,Rabbit是如何处理这种问题呢? 4.1 Prefetch count 前面我们讲到如果有多个消费者同时订阅同一个Queue中的消息，Queue中的消息会被平摊给多个消费者。这时如果每个消息的处理时间不同，就有可能会导致某些消费者一直在忙，而另外一些消费者很快就处理完手头工作并一直空闲的情况。我们可以通过设置prefetchCount来限制Queue每次发送给每个消费者的消息数，比如我们设置prefetchCount=1，则Queue每次给每个消费者发送一条消息；消费者处理完这条消息后Queue会再给该消费者发送一条消息。 通过basic.qos方法设置prefetch_count=1，这样RabbitMQ就会使得每个Consumer在同一个时间点最多处理一个Message，换句话说,在接收到该Consumer的ack前,它不会将新的Message分发给它 channel.basic_qos(prefetch_count=1) 注意，这种方法可能会导致queue满。当然，这种情况下你可能需要添加更多的Consumer，或者创建更多的virtual Host来细化你的设计。 七、消息序列化RabbitMQ使用ProtoBuf序列化消息,它可作为RabbitMQ的Message的数据格式进行传输,由于是结构化的数据,这样就极大的方便了Consumer的数据高效处理,当然也可以使用XML，与XML相比, ProtoBuf有以下优势:1.简单2.size小了3-10倍3.速度快了20-100倍4.易于编程6.减少了语义的歧义.，ProtoBuf具有速度和空间的优势，使得它现在应用非常广泛 八、RPCMQ 本身是基于异步的消息处理，前面的示例中所有的生产者（P）将消息发送到 RabbitMQ 后不会知道消费者（C）处理成功或者失败（甚至连有没有消费者来处理这条消息都不知道）。 但实际的应用场景中，我们很可能需要一些同步处理，需要同步等待服务端将我的消息处理完成后再进行下一步处理。这相当于RPC（Remote Procedure Call，远程过程调用）。 RabbitMQ 中也支持 RPC，RabbitMQ 中实现 RPC 的机制是：客户端发送请求（消息）时，在消息的属性（MessageProperties ，在 AMQP 协议中定义了14种 properties ，这些属性会随着消息一起发送）中设置两个值 replyTo （一个 Queue 名称，用于告诉服务器处理完成后将通知我的消息发送到这个 Queue 中）和 correlationId （此次请求的标识号，服务器处理完成后需要将此属性返还，客户端将根据这个id了解哪条请求被成功执行了或执行失败）服务器端收到消息并处理，处理完消息后，将生成一条应答消息到replyTo 指定的 Queue ，同时带上 correlationId 属性客户端之前已订阅 replyTo 指定的 Queue ，从中收到服务器的应答消息后，根据其中的correlationId 属性分析哪条请求被执行了，根据执行结果进行后续业务处理 九、RabbitMQ 选型和对比1.从社区活跃度按照目前网络上的资料，RabbitMQ 、activeM 、ZeroMQ 三者中，综合来看，RabbitMQ 是首选。 2.持久化消息比较ZeroMq 不支持，ActiveMq 和RabbitMq 都支持。持久化消息主要是指我们机器在不可抗力因素等情况下挂掉了，消息不会丢失的机制。 3.综合技术实现可靠性、灵活的路由、集群、事务、高可用的队列、消息排序、问题追踪、可视化管理工具、插件系统等等。RabbitMq / Kafka 最好，ActiveMq 次之，ZeroMq 最差。当然ZeroMq 也可以做到，不过自己必须手动写代码实现，代码量不小。尤其是可靠性中的：持久性、投递确认、发布者证实和高可用性。 4.高并发毋庸置疑，RabbitMQ 最高，原因是它的实现语言是天生具备高并发高可用的erlang 语言。 5.比较关注的比较， RabbitMQ 和 KafkaRabbitMq 比 Kafka 成熟，在可用性上，稳定性上，可靠性上，RabbitMq 胜于 Kafka（理论上）。另外，Kafka 的定位主要在日志等方面， 因为Kafka 设计的初衷就是处理日志的，可以看做是一个日志（消息）系统一个重要组件，针对性很强，所以 如果业务方面还是建议选择 RabbitMq 。还有就是，Kafka 的性能（吞吐量、TPS ）比RabbitMq 要高出来很多。选型最后总结：如果我们系统中已经有选择 Kafka ，或者 RabbitMq ，并且完全可以满足现在的业务，建议就不用重复去增加和造轮子。可以在 Kafka 和 RabbitMq 中选择一个适合自己团队和业务的，这个才是最重要的。但是毋庸置疑现阶段，综合考虑没有第三选择。 参考资源 链接：https://www.sojson.com/blog/48.html 链接：https://blog.csdn.net/whoamiyang/article/details/54954780 链接：https://www.jianshu.com/p/79ca08116d57 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","link":"/2019/04/rabbitmq-application-scenarios.html"},{"title":"1、递归 - 分层数据 Hierarchical Data 探索","text":"引言什么是分层数据？（例如：无限级分类、多级菜单、省份城市） 类似于树形结构，除了根节点和叶子节点外，所有节点都有一个父节点和一个或多个子节点。 大多数同学都曾在数据库中处理过分层数据(hierarchical data)，分层数据存在于许多基于数据库的应用程序中，包括论坛和邮件列表中的分类、商业组织图表、内容管理系统的分类、产品分类、无限级分类、多级菜单、省份城市等等。但是因为关系数据库中的表没有层次关系，只是简单的平面化的列表；而分层数据具有父－子关系，显然关系数据库中的表不能自然地表现出其分层的特性。 接下来我会先通过一般方法和递归(recursion)方法来实现无限极分类，然后再通过两种数据模型来谈一谈分层数据的处理。 1、递归 - 分层数据 Hierarchical Data 探索(recursion) 2、邻接表模型 - 分层数据 Hierarchical Data 探索(Adjacency List Model) 3、嵌套集合模型 - 分层数据 Hierarchical Data 探索(Nested Set Model) 三种方式的变量传递 &amp; 引用赋值 123456789function doloop1(&amp;$i = 1){ print_r($i); $i++; if ($i &lt;= 10) { doloop1($i); }}doloop1(); static 静态变量 1234567891011function doloop2(){ static $i = 1; print_r($i); $i++; if ($i &lt;= 10) { doloop2(); }}doloop2(); global 全局变量 1234567891011$i = 1;function doloop3(){ global $i; echo $i; $i++; if ($i &lt;= 10) { doloop3(); }}doloop3(); 构建模拟数据1234567891011121314151617# 模拟数据 $data = [ ['id' =&gt; 1, 'title' =&gt; 'Electronics', 'parent_id' =&gt; 0], ['id' =&gt; 2, 'title' =&gt; 'Laptops &amp; PC', 'parent_id' =&gt; 1], ['id' =&gt; 3, 'title' =&gt; 'Laptops', 'parent_id' =&gt; 2], ['id' =&gt; 4, 'title' =&gt; 'PC', 'parent_id' =&gt; 2], ['id' =&gt; 5, 'title' =&gt; 'Cameras &amp; photo', 'parent_id' =&gt; 1], ['id' =&gt; 6, 'title' =&gt; 'Camera', 'parent_id' =&gt; 5], ['id' =&gt; 7, 'title' =&gt; 'Phones &amp; Accessories', 'parent_id' =&gt; 1], ['id' =&gt; 8, 'title' =&gt; 'Smartphones', 'parent_id' =&gt; 7], ['id' =&gt; 9, 'title' =&gt; 'Android', 'parent_id' =&gt; 8], ['id' =&gt; 10, 'title' =&gt; 'iOS', 'parent_id' =&gt; 8], ['id' =&gt; 11, 'title' =&gt; 'Other Smartphones', 'parent_id' =&gt; 8], ['id' =&gt; 12, 'title' =&gt; 'Batteries', 'parent_id' =&gt; 7], ['id' =&gt; 13, 'title' =&gt; 'Headsets', 'parent_id' =&gt; 7], ['id' =&gt; 14, 'title' =&gt; 'Screen Protectors', 'parent_id' =&gt; 7],]; 获取无限极分类123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354/** * 值引用获取无限极分类树 * * @param array $data * @return array */function make_tree($data){ $refer = array(); $tree = array(); foreach($data as $k =&gt; $v){ $refer[$v['id']] = &amp; $data[$k]; //创建主键的数组引用 } foreach($data as $k =&gt; $v){ $parent_id = $v['parent_id']; //获取当前分类的父级id if($parent_id == 0){ $tree[] = &amp; $data[$k]; //顶级栏目 }else{ if(isset($refer[$parent_id])){ $refer[$parent_id]['children'][] = &amp; $data[$k]; //如果存在父级栏目，则添加进父级栏目的子栏目数组中 } } } return $tree; }/** * 递归获取无限极分类树 * * @param array $data * @param int $parent_id * @param int $level * @return array */function make_tree2($data = [], $parent_id = 0, $level = 0){ $tree = []; if ($data &amp;&amp; is_array($data)) { foreach ($data as $v) { if ($v['parent_id'] == $parent_id) { $tree[] = [ 'id' =&gt; $v['id'], 'level' =&gt; $level, 'title' =&gt; $v['title'], 'parent_id' =&gt; $v['parent_id'], 'children' =&gt; make_tree2($data, $v['id'], $level + 1), ]; } } } return $tree;} 获取子节点以及节点的层级1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465/** * 引用赋值方式 * @param array $data * @param int $id * @param int $level * @return array */function getSubTree($data = [], $id = 0, $level = 0){ static $tree = []; foreach ($data as $key =&gt; $value) { if ($value['parent_id'] == $id) { $value['laravel'] = $level; $tree[] = $value; getSubTree($data, $value['id'], $level + 1); } } return $tree;}/** * 静态变量方式 * @param array $data * @param int $id * @param int $level * @return array */function getSubTree($data = [], $id = 0, $level = 0){ static $tree = []; foreach ($data as $key =&gt; $value) { if ($value['parent_id'] == $id) { $value['laravel'] = $level; $tree[] = $value; getSubTree($data, $value['id'], $level + 1); } } return $tree;}/** * 全局变量方式 * @param array $data * @param int $id * @param int $level * @return array */$tree = []; //先申明变量function getSubTree($data = [], $id = 0, $level = 0){ global $tree; foreach ($data as $key =&gt; $value) { if ($value['parent_id'] == $id) { $value['laravel'] = $level; $tree[] = $value; getSubTree($data, $value['id'], $level + 1); } } return $tree;} 通过pid获取所有上级分类 常用于面包屑导航123456789101112131415161718192021222324252627282930313233343536/** * getParentsByParentId2($categories, 9) * * @param array $data * @param $parent_id * @return array */function getParentsByParentId($data = [], $parent_id){ static $categories = []; if ($data &amp;&amp; is_array($data)) { foreach ($data as $item) { if ($item['id'] == $parent_id) { $categories[] = $item; getParentsByParentId($data, $item['parent_id']); } } } return $categories;}function getParentsByParentId2($data = [], $parent_id){ $categories = []; if ($data &amp;&amp; is_array($data)) { foreach ($data as $item) { if ($item['id'] == $parent_id) { $categories[] = $item; $categories = array_merge($categories, getParentsByParentId2($data, $item['parent_id'])); } } } return $categories;}","link":"/2019/05/hierarchical-data-recursion.html"},{"title":"用 PHP 写一个微波炉","text":"在网上看到一个笔试题，感觉挺有意思的，然后我尝试着写一写，欢迎各位大佬指正。 代码题（用OOP的思想编码，注意代码规范） 写出你的思路，最好有代码 用php写一个微波炉，注意物品正加热时不能开门，带皮带壳食物不能被加热。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209&lt;?php/** * 厨房用具 * Interface kitchenWare */interface kitchenWare { /** * 加工食材 * @param Food $food * @return mixed */ public function process(Food $food); /** * 是否正在加工 * @return mixed */ public function hasProcess();}/** * 微波炉 * Class MicrowaveOven */class MicrowaveOven implements kitchenWare{ /** * 是否加热中 * @var bool */ protected $is_heat = false; /** * @param Food $food * @return mixed|string */ public function process(Food $food) { if ($this-&gt;hasProcess()) { return '已有食物在加热，无法打开'; } else { if ($food-&gt;hasShuck() || $food-&gt;hasPericarp()) { return '食物带壳或者带皮，无法进行加热'; } else { $this-&gt;is_heat = true; return '食物加热中，加热完成即可取出'; } } } /** * 是否正在加工 * @return bool|mixed */ public function hasProcess() { return $this-&gt;is_heat; }}/** * 烤箱 * Class Oven */class Oven implements kitchenWare{ /** * 是否烧烤中 * @var bool */ protected $is_heat = false; /** * @param Food $food * @return mixed|string */ public function process(Food $food) { if ($this-&gt;is_heat) { return '已有食物在烤制，无法打开'; } else { if ($food-&gt;hasShuck()) { return '食物带壳，无法进行烤制'; } else { $this-&gt;is_heat = true; return '食物烤制中，完成即可取出'; } } } /** * 是否正在加工 * @return bool|mixed */ public function hasProcess() { return $this-&gt;is_heat; }}/** * 食物 * Class Food */class Food{ /** * 是否带壳 * @var bool */ protected $is_shuck = false; /** * 是否带皮 * @var bool */ protected $is_pericarp = false; /** * Food constructor. * @param bool $is_shuck * @param bool $is_pericarp */ public function __construct(bool $is_shuck, bool $is_pericarp) { $this-&gt;is_shuck = $is_shuck; $this-&gt;is_pericarp = $is_pericarp; } /** * 判断是否带壳 * @return bool */ public function hasShuck() { return $this-&gt;is_shuck; } /** * 判断是否带皮 * @return bool */ public function hasPericarp() { return $this-&gt;is_pericarp; }}/** * 烹饪 * Class Cooking */class Cooking{ /** * @var kitchenWare */ protected $kitchenWare; /** * Cook constructor. * @param kitchenWare $kitchenWare */ public function __construct(kitchenWare $kitchenWare) { $this-&gt;kitchenWare = $kitchenWare; } /** * 烹饪食物 * @param Food $food * @return mixed */ public function cooking(Food $food) { $data = $this-&gt;kitchenWare-&gt;process($food); return $data; }}/** * 微波炉加热 * @return mixed */function test(){ $cooking = new Cooking(new MicrowaveOven()); $food = new Food(false, false); $result = $cooking-&gt;cooking($food); $result2 = $cooking-&gt;cooking($food); var_dump($result, $result2);}/** * 烤箱烤制 * @return mixed */function test2(){ $cooking = new Cooking(new Oven()); $food = new Food(false, true); $result = $cooking-&gt;cooking($food); $result2 = $cooking-&gt;cooking($food); var_dump($result, $result2);}test();test2();","link":"/2019/05/php-writing-microwave.html"},{"title":"1、邻接表模型 - 分层数据 Hierarchical Data 探索","text":"引言第一篇 1、递归 - 分层数据 Hierarchical Data 探索 已经介绍了分层数据以及使用递归算法实现了无限极分类，但是递归即浪费时间，又浪费空间（内存）,尤其是在数据量大的情况下效率显著下降。那么，在MySQL中如何处理分层数据呢？下面我们来说一说数据模型邻接表模型 1、递归 - 分层数据 Hierarchical Data 探索(recursion) 2、邻接表模型 - 分层数据 Hierarchical Data 探索(Adjacency List Model) 3、嵌套集合模型 - 分层数据 Hierarchical Data 探索(Nested Set Model) 邻接表模型(Adjacency List Model)更多 邻接表模型（Adjacency List Model）的介绍请见:wiki 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152# 为了模拟，我们创建一个表category包含三个字段：id，title，和parent_id如下：CREATE TABLE category ( id int(10) unsigned NOT NULL AUTO_INCREMENT, title varchar(255) NOT NULL, parent_id int(10) unsigned DEFAULT NULL, PRIMARY KEY (id), FOREIGN KEY (parent_id) REFERENCES category (id) ON DELETE CASCADE ON UPDATE CASCADE);# 插入模拟数据INSERT INTO category(title,parent_id) VALUES('Electronics',NULL);INSERT INTO category(title,parent_id) VALUES('Laptops &amp; PC',1); INSERT INTO category(title,parent_id) VALUES('Laptops',2);INSERT INTO category(title,parent_id) VALUES('PC',2); INSERT INTO category(title,parent_id) VALUES('Cameras &amp; photo',1);INSERT INTO category(title,parent_id) VALUES('Camera',5); INSERT INTO category(title,parent_id) VALUES('Phones &amp; Accessories',1);INSERT INTO category(title,parent_id) VALUES('Smartphones',7); INSERT INTO category(title,parent_id) VALUES('Android',8);INSERT INTO category(title,parent_id) VALUES('iOS',8);INSERT INTO category(title,parent_id) VALUES('Other Smartphones',8); INSERT INTO category(title,parent_id) VALUES('Batteries',7);INSERT INTO category(title,parent_id) VALUES('Headsets',7);INSERT INTO category(title,parent_id) VALUES('Screen Protectors',7);select * from category;+----+----------------------+-----------+| id | title | parent_id |+----+----------------------+-----------+| 1 | Electronics | NULL || 2 | Laptops &amp; PC | 1 || 3 | Laptops | 2 || 4 | PC | 2 || 5 | Cameras &amp; photo | 1 || 6 | Camera | 5 || 7 | Phones &amp; Accessories | 1 || 8 | Smartphones | 7 || 9 | Android | 8 || 10 | iOS | 8 || 11 | Other Smartphones | 8 || 12 | Batteries | 7 || 13 | Headsets | 7 || 14 | Screen Protectors | 7 |+----+----------------------+-----------+14 rows in set (0.00 sec) 检索根节点 1234567SELECT * FROM category WHERE parent_id IS NULL;+----+-------------+-----------+| id | title | parent_id |+----+-------------+-----------+| 1 | Electronics | NULL |+----+-------------+-----------+1 row in set (0.00 sec) 检索所有叶子节点 12345678910111213141516171819202122SELECT c1.id, c1.titleFROM category c1 LEFT JOIN category c2 ON c2.parent_id = c1.idWHERE c2.id IS NULL;+----+-------------------+| id | title |+----+-------------------+| 3 | Laptops || 4 | PC || 6 | Camera || 9 | Android || 10 | iOS || 11 | Other Smartphones || 12 | Batteries || 13 | Headsets || 14 | Screen Protectors |+----+-------------------+9 rows in set (0.00 sec) 检索整棵树的分层路径 1234567891011121314151617181920SELECT t1.title AS lev1, t2.title as lev2, t3.title as lev3, t4.title as lev4FROM category AS t1LEFT JOIN category AS t2 ON t2.parent_id = t1.idLEFT JOIN category AS t3 ON t3.parent_id = t2.idLEFT JOIN category AS t4 ON t4.parent_id = t3.idWHERE t1.title = 'Electronics';-------------+----------------------+-------------------+-------------------+| lev1 | lev2 | lev3 | lev4 |+-------------+----------------------+-------------------+-------------------+| Electronics | Laptops &amp; PC | Laptops | NULL || Electronics | Laptops &amp; PC | PC | NULL || Electronics | Cameras &amp; photo | Camera | NULL || Electronics | Phones &amp; Accessories | Smartphones | Android || Electronics | Phones &amp; Accessories | Smartphones | iOS || Electronics | Phones &amp; Accessories | Smartphones | Other Smartphones || Electronics | Phones &amp; Accessories | Batteries | NULL || Electronics | Phones &amp; Accessories | Headsets | NULL || Electronics | Phones &amp; Accessories | Screen Protectors | NULL |+-------------+----------------------+-------------------+-------------------+9 rows in set (0.00 sec) 检索单一指定路径 123456789101112SELECT t1.title AS lev1, t2.title as lev2, t3.title as lev3, t4.title as lev4FROM category AS t1LEFT JOIN category AS t2 ON t2.parent_id = t1.idLEFT JOIN category AS t3 ON t3.parent_id = t2.idLEFT JOIN category AS t4 ON t4.parent_id = t3.idWHERE t1.title = 'Electronics' AND t4.title = 'iOS';+-------------+----------------------+-------------+------+| lev1 | lev2 | lev3 | lev4 |+-------------+----------------------+-------------+------+| Electronics | Phones &amp; Accessories | Smartphones | iOS |+-------------+----------------------+-------------+------+1 row in set (0.00 sec) 以下递归公用表达式（CTE）检索。请注意，MySQL 8.0以上版本，CTE功能已经支持 CTE 查询整棵树 12345678910111213141516171819202122232425262728293031WITH RECURSIVE category_path (id, title, path) AS( SELECT id, title, title as path FROM category WHERE parent_id IS NULL UNION ALL SELECT c.id, c.title, CONCAT(cp.path, ' &gt; ', c.title) FROM category_path AS cp JOIN category AS c ON cp.id = c.parent_id)SELECT * FROM category_pathORDER BY path;+------+----------------------+----------------------------------------------------------------------+| id | title | path |+------+----------------------+----------------------------------------------------------------------+| 1 | Electronics | Electronics || 5 | Cameras &amp; photo | Electronics &gt; Cameras &amp; photo || 6 | Camera | Electronics &gt; Cameras &amp; photo &gt; Camera || 2 | Laptops &amp; PC | Electronics &gt; Laptops &amp; PC || 3 | Laptops | Electronics &gt; Laptops &amp; PC &gt; Laptops || 4 | PC | Electronics &gt; Laptops &amp; PC &gt; PC || 7 | Phones &amp; Accessories | Electronics &gt; Phones &amp; Accessories || 12 | Batteries | Electronics &gt; Phones &amp; Accessories &gt; Batteries || 13 | Headsets | Electronics &gt; Phones &amp; Accessories &gt; Headsets || 14 | Screen Protectors | Electronics &gt; Phones &amp; Accessories &gt; Screen Protectors || 8 | Smartphones | Electronics &gt; Phones &amp; Accessories &gt; Smartphones || 9 | Android | Electronics &gt; Phones &amp; Accessories &gt; Smartphones &gt; Android || 10 | iOS | Electronics &gt; Phones &amp; Accessories &gt; Smartphones &gt; iOS || 11 | Other Smartphones | Electronics &gt; Phones &amp; Accessories &gt; Smartphones &gt; Other Smartphones |+------+----------------------+----------------------------------------------------------------------+14 rows in set (0.01 sec) CTE 查询指定子树 查询id为 7 的 Phone &amp; Accessories 的子树 123456789101112131415161718192021222324WITH RECURSIVE category_path (id, title, path) AS( SELECT id, title, title as path FROM category WHERE parent_id = 7 UNION ALL SELECT c.id, c.title, CONCAT(cp.path, ' &gt; ', c.title) FROM category_path AS cp JOIN category AS c ON cp.id = c.parent_id)SELECT * FROM category_pathORDER BY path;+------+-------------------+---------------------------------+| id | title | path |+------+-------------------+---------------------------------+| 12 | Batteries | Batteries || 13 | Headsets | Headsets || 14 | Screen Protectors | Screen Protectors || 8 | Smartphones | Smartphones || 9 | Android | Smartphones &gt; Android || 10 | iOS | Smartphones &gt; iOS || 11 | Other Smartphones | Smartphones &gt; Other Smartphones |+------+-------------------+---------------------------------+7 rows in set (0.01 sec) CTE 查询单个枝叶路径 从底部 iOS 到 顶部 Electronics 的单个路径 1234567891011121314151617181920WITH RECURSIVE category_path (id, title, parent_id) AS( SELECT id, title, parent_id FROM category WHERE id = 10 -- child node UNION ALL SELECT c.id, c.title, c.parent_id FROM category_path AS cp JOIN category AS c ON cp.parent_id = c.id)SELECT * FROM category_path;+------+----------------------+-----------+| id | title | parent_id |+------+----------------------+-----------+| 10 | iOS | 8 || 8 | Smartphones | 7 || 7 | Phones &amp; Accessories | 1 || 1 | Electronics | NULL |+------+----------------------+-----------+4 rows in set (0.00 sec) CTE 计算每个节点的层级 根节点为 0，每个子节点等于父节点加 1 12345678910111213141516171819202122232425262728293031WITH RECURSIVE category_path (id, title, lvl) AS( SELECT id, title, 0 AS lvl FROM category WHERE parent_id IS NULL UNION ALL SELECT c.id, c.title,cp.lvl + 1 FROM category_path AS cp JOIN category AS c ON cp.id = c.parent_id)SELECT * FROM category_pathORDER BY lvl;+------+----------------------+------+| id | title | lvl |+------+----------------------+------+| 1 | Electronics | 0 || 2 | Laptops &amp; PC | 1 || 5 | Cameras &amp; photo | 1 || 7 | Phones &amp; Accessories | 1 || 4 | PC | 2 || 6 | Camera | 2 || 8 | Smartphones | 2 || 12 | Batteries | 2 || 13 | Headsets | 2 || 14 | Screen Protectors | 2 || 3 | Laptops | 2 || 11 | Other Smartphones | 3 || 9 | Android | 3 || 10 | iOS | 3 |+------+----------------------+------+14 rows in set (0.00 sec) 删除节点及其子节点 要删除节点及其子节点，只需删除节点本身，所有子节点将由 DELETE CASCADE 外键约束自动删除例如：要删除Laptops &amp; PC节点及其子节点 1DELETE FROM category WHERE id = 2; 删除节点并提升其子节点 首先，parent_id将节点的直接子节点更新为id新父节点的子节点。 然后，删除该节点。 例如，要删除 Smartphones 节点和更新 Android，iOS，Other Smartphones 节点：两个语句都应该包含在一个事务中： 12345678910111213BEGIN;UPDATE category SET parent_id = 7 -- Phones &amp; AccessoriesWHERE parent_id = 5; -- SmartphonesDELETE FROM category WHERE id = 8; COMMIT; 参考资源 链接：http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/ 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","link":"/2019/06/hierarchical-data-adjacency-list-model.html"},{"title":"3、嵌套集合模型 - 分层数据 Hierarchical Data 探索","text":"引言第二篇 2、邻接表模型 - 分层数据Hierarchical Data探索 介绍了一种数据模型邻接表模型来实现，但在检索路径的过程中，除了本层外，每一层都会对应一个LEFT JOIN，那么如果层数不定怎么办？或者层数过多？ 第一篇 1、递归 - 分层数据Hierarchical Data探索 已经介绍了分层数据以及使用递归算法实现了无限极分类，但是递归即浪费时间，又浪费空间（内存）,尤其是在数据量大的情况下效率显著下降。 邻接表模型的局限性用纯SQL编码实现邻接表模型有一定的难度。在我们检索某分类的路径之前，我们需要知道该分类所在的层次。在删除中间层的节点时，需要同时删除该节点下的所有节点，否则会出现孤立节点。 那么，在MySQL中如何更好的处理分层数据呢？下面我们来说一说嵌套集合模型 1、递归 - 分层数据 Hierarchical Data 探索(recursion) 2、邻接表模型 - 分层数据 Hierarchical Data 探索(Adjacency List Model) 3、嵌套集合模型 - 分层数据 Hierarchical Data 探索(Nested Set Model) 嵌套集合模型(Nested Set Model) 更多 嵌套集合模型（Nested Set Model）的介绍请见:wiki 在嵌套集合模型中，我们将以一种新的方式来理解我们的分层数据，不再是线与点了，而是嵌套容器。下图以嵌套容器的方式画出了 electronics 分类图： 通过集合的包含关系，嵌套结合模型可以表示分层结构，每一个分层可以用一个Set来表示（一个圈），父节点所在的圈包含所有子节点所在的圈。 为了用MySQL来表示集合关系，需要定义连个字段 lft 和 rgt （表示一个集合的范围）。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950# 为了模拟，我们创建一个表category包含三个字段：id，title，lft，rgt如下：CREATE TABLE category ( id int(10) unsigned NOT NULL AUTO_INCREMENT PRIMARY KEY, title varchar(255) NOT NULL, lft int(10) NOT NULL, rgt int(10) NOT NULL);# 插入模拟数据INSERT INTO category(title,lft,rgt) VALUES('Electronics',1,28);INSERT INTO category(title,lft,rgt) VALUES('Laptops &amp; PC',2,7); INSERT INTO category(title,lft,rgt) VALUES('Laptops',3,4);INSERT INTO category(title,lft,rgt) VALUES('PC',5,6); INSERT INTO category(title,lft,rgt) VALUES('Cameras &amp; photo',8,11);INSERT INTO category(title,lft,rgt) VALUES('Camera',9,10); INSERT INTO category(title,lft,rgt) VALUES('Phones &amp; Accessories',12,27);INSERT INTO category(title,lft,rgt) VALUES('Smartphones',13,20); INSERT INTO category(title,lft,rgt) VALUES('Android',14,15);INSERT INTO category(title,lft,rgt) VALUES('iOS',16,17);INSERT INTO category(title,lft,rgt) VALUES('Other Smartphones',18,19); INSERT INTO category(title,lft,rgt) VALUES('Batteries',21,22);INSERT INTO category(title,lft,rgt) VALUES('Headsets',23,24);INSERT INTO category(title,lft,rgt) VALUES('Screen Protectors',25,26);select * from category;+----+----------------------+-----+-----+| id | title | lft | rgt |+----+----------------------+-----+-----+| 1 | Electronics | 1 | 28 || 2 | Laptops &amp; PC | 2 | 7 || 3 | Laptops | 3 | 4 || 4 | PC | 5 | 6 || 5 | Cameras &amp; photo | 8 | 11 || 6 | Camera | 9 | 10 || 7 | Phones &amp; Accessories | 12 | 27 || 8 | Smartphones | 13 | 20 || 9 | Android | 14 | 15 || 10 | iOS | 16 | 17 || 11 | Other Smartphones | 18 | 19 || 12 | Batteries | 21 | 22 || 13 | Headsets | 23 | 24 || 14 | Screen Protectors | 25 | 26 |+----+----------------------+-----+-----+14 rows in set (0.00 sec) 检索分层路径 由于子节点的 lft 值总在父节点的 lft 和 rgt 值之间，所以可以通过父节点连接到子节点上来检索整棵树 12345678910111213141516171819202122232425SELECT node.id,node.title,node.lft,node.rgtFROM category AS node, category AS parentWHERE node.lft BETWEEN parent.lft AND parent.rgt AND parent.title = 'Electronics'ORDER BY node.lft;+----+----------------------+-----+-----+| id | title | lft | rgt |+----+----------------------+-----+-----+| 1 | Electronics | 1 | 28 || 2 | Laptops &amp; PC | 2 | 7 || 3 | Laptops | 3 | 4 || 4 | PC | 5 | 6 || 5 | Cameras &amp; photo | 8 | 11 || 6 | Camera | 9 | 10 || 7 | Phones &amp; Accessories | 12 | 27 || 8 | Smartphones | 13 | 20 || 9 | Android | 14 | 15 || 10 | iOS | 16 | 17 || 11 | Other Smartphones | 18 | 19 || 12 | Batteries | 21 | 22 || 13 | Headsets | 23 | 24 || 14 | Screen Protectors | 25 | 26 |+----+----------------------+-----+-----+14 rows in set (0.05 sec) 不像之前邻接表模型的例子，这个查询语句不管树的层次有多深都能很好的工作。在BETWEEN的子句中我们没有去关心node的rgt值，是因为使用node的rgt值得出的父节点总是和使用lft值得出的是相同的。 检索所有叶子节点 检索出所有的叶子节点，使用嵌套集合模型的方法比邻接表模型的LEFT JOIN方法简单多了。如果你仔细得看了category表，你可能已经注意到叶子节点的左右值是连续的。要检索出叶子节点，我们只要查找满足 rgt=lft+1 的节点： 1234567891011121314151617SELECT id,title,lft,rgtFROM categoryWHERE rgt = lft + 1;+----+-------------------+-----+-----+| id | title | lft | rgt |+----+-------------------+-----+-----+| 3 | Laptops | 3 | 4 || 4 | PC | 5 | 6 || 6 | Camera | 9 | 10 || 9 | Android | 14 | 15 || 10 | iOS | 16 | 17 || 11 | Other Smartphones | 18 | 19 || 12 | Batteries | 21 | 22 || 13 | Headsets | 23 | 24 || 14 | Screen Protectors | 25 | 26 |+----+-------------------+-----+-----+9 rows in set (0.00 sec) 查询 检索单一路径 在嵌套集合模型中，我们可以不用多个自连接就可以检索出单一路径： 123456789101112131415SELECT parent.id,parent.title,parent.lft,parent.rgtFROM category AS node, category AS parentWHERE node.lft BETWEEN parent.lft AND parent.rgt AND node.title = 'PC'ORDER BY parent.lft;+----+--------------+-----+-----+| id | title | lft | rgt |+----+--------------+-----+-----+| 1 | Electronics | 1 | 28 || 2 | Laptops &amp; PC | 2 | 7 || 4 | PC | 5 | 6 |+----+--------------+-----+-----+3 rows in set (0.00 sec) 检索节点的深度 我们已经知道怎样去呈现一棵整树，但是为了更好的标识出节点在树中所处层次，我们怎样才能检索出节点在树中的层级呢？我们可以在之前的查询语句上增加COUNT函数和GROUP BY子句来实现： 1234567891011121314151617181920212223242526SELECT node.title,(COUNT(parent.title) - 1) AS levFROM category AS node, category AS parentWHERE node.lft BETWEEN parent.lft AND parent.rgtGROUP BY node.titleORDER BY node.lft;+----------------------+-----+| title | lev |+----------------------+-----+| Electronics | 0 || Laptops &amp; PC | 1 || Laptops | 2 || PC | 2 || Cameras &amp; photo | 1 || Camera | 2 || Phones &amp; Accessories | 1 || Smartphones | 2 || Android | 3 || iOS | 3 || Other Smartphones | 3 || Batteries | 2 || Headsets | 2 || Screen Protectors | 2 |+----------------------+-----+14 rows in set (0.01 sec) 如果当前MySQL版本是5.7或者以上可能会出现 1055 的报错，下面是是解决办法 12345678910报错：ERROR 1055 (42000): Expression #1 of ORDER BY clause is not in GROUP BY clause and contains nonaggregated column 'test.node.lft' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by原因：In 5.7 the sqlmode is set by default to:ONLY_FULL_GROUP_BY,NO_AUTO_CREATE_USER,STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION解决：To remove the clause ONLY_FULL_GROUP_BY you can do this:SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));This supposed you need to make that GROUP BY with non aggregated columns. 我们可以根据 lev 值来缩进分类名字，使用 CONCAT 和 REPEAT 字符串函数: 12345678910111213141516171819202122232425SELECT CONCAT( REPEAT(' ', COUNT(parent.title) - 1), node.title) AS name,(COUNT(parent.title) - 1) AS levFROM category AS node, category AS parentWHERE node.lft BETWEEN parent.lft AND parent.rgtGROUP BY node.titleORDER BY node.lft;+-----------------------+-----+| name | lev |+-----------------------+-----+| Electronics | 0 || Laptops &amp; PC | 1 || Laptops | 2 || PC | 2 || Cameras &amp; photo | 1 || Camera | 2 || Phones &amp; Accessories | 1 || Smartphones | 2 || Android | 3 || iOS | 3 || Other Smartphones | 3 || Batteries | 2 || Headsets | 2 || Screen Protectors | 2 |+-----------------------+-----+14 rows in set (0.01 sec) 检索子树的深度 123456789101112131415161718SELECT node.title, (COUNT(parent.title) - (sub_tree.lev + 1)) AS levFROM category AS node, category AS parent, category AS sub_parent, ( SELECT node.title, (COUNT(parent.title) - 1) AS lev FROM category AS node, category AS parent WHERE node.lft BETWEEN parent.lft AND parent.rgt AND node.title = 'Phones &amp; Accessories' GROUP BY node.title ORDER BY node.lft ) AS sub_treeWHERE node.lft BETWEEN parent.lft AND parent.rgt AND node.lft BETWEEN sub_parent.lft AND sub_parent.rgt AND sub_parent.title = sub_tree.titleGROUP BY node.titleORDER BY node.lft; 这个查询语句可以检索出任一节点子树的深度值，包括根节点。这里的深度值跟你指定的节点有关。 检索节点的直接子节点 可以想象一下，你在零售网站上呈现电子产品的分类。当用户点击分类后，你将要呈现该分类下的产品，同时也需列出该分类下的直接子分类，而不是该分类下的全部分类。为此，我们只呈现该节点及其直接子节点，不再呈现更深层次的节点。要实现它非常的简单，在先前的查询语句上添加 HAVING 子句： 12345678910111213141516171819SELECT node.title, (COUNT(parent.title) - (sub_tree.lev + 1)) AS levFROM category AS node, category AS parent, category AS sub_parent, ( SELECT node.title, (COUNT(parent.title) - 1) AS lev FROM category AS node, category AS parent WHERE node.lft BETWEEN parent.lft AND parent.rgt AND node.title = 'Phones &amp; Accessories' GROUP BY node.title ORDER BY node.lft ) AS sub_treeWHERE node.lft BETWEEN parent.lft AND parent.rgt AND node.lft BETWEEN sub_parent.lft AND sub_parent.rgt AND sub_parent.title = sub_tree.titleGROUP BY node.titleHAVING lev &lt;= 1ORDER BY node.lft; 如果你不希望呈现父节点，你可以更改 HAVING lev &lt;= 1 为 HAVING lev = 1。 新增节点 添加同一层次的节点 到现在，我们已经知道了如何去查询我们的树，是时候关注一下如何增加一个新节点来更新我们的树了。当我们想要在 Laptops &amp; PC 和 Cameras &amp; photo节点之间新增一个节点，新节点的 lft 和 rgt 的 值为8和9，所有该节点的右边节点的lft和rgt值都将加2，之后我们再添加新节点并赋相应的lft和rgt值。我使用了锁表（LOCK TABLES）语句来隔离查询： 123456789101112131415161718192021222324252627282930313233343536373839LOCK TABLE category WRITE;SELECT @myRight := rgt FROM category WHERE title = 'Laptops &amp; PC';UPDATE category SET rgt = rgt + 2 WHERE rgt &gt; @myRight;UPDATE category SET lft = lft + 2 WHERE lft &gt; @myRight;INSERT INTO category(title, lft, rgt) VALUES('Game Consoles', @myRight + 1, @myRight + 2);UNLOCK TABLES;我们可以检验一下新节点插入的正确性：SELECT CONCAT( REPEAT(' ', COUNT(parent.title) - 1), node.title) AS name,(COUNT(parent.title) - 1) AS levFROM category AS node, category AS parentWHERE node.lft BETWEEN parent.lft AND parent.rgtGROUP BY node.titleORDER BY node.lft;+-----------------------+-----+| name | lev |+-----------------------+-----+| Electronics | 0 || Laptops &amp; PC | 1 || Laptops | 2 || PC | 2 || Game Consoles | 1 || Cameras &amp; photo | 1 || Camera | 2 || Phones &amp; Accessories | 1 || Smartphones | 2 || Android | 3 || iOS | 3 || Other Smartphones | 3 || Batteries | 2 || Headsets | 2 || Screen Protectors | 2 |+-----------------------+-----+15 rows in set (0.00 sec) 添加叶子节点 如果我们想要在叶子节点下增加节点，我们得稍微修改一下查询语句。让我们在 Camera 叶子节点下添加 SLR 节点： 12345678910LOCK TABLE category WRITE;SELECT @myLeft := lft FROM category WHERE title = 'Camera';UPDATE category SET rgt = rgt + 2 WHERE rgt &gt; @myLeft;UPDATE category SET lft = lft + 2 WHERE lft &gt; @myLeft;INSERT INTO category(title, lft, rgt) VALUES('SLR', @myLeft + 1, @myLeft + 2);UNLOCK TABLES; 删除节点最后删除节点。删除节点的处理过程跟节点在分层数据中所处的位置有关，删除一个叶子节点比删除一个子节点要简单得多，因为删除子节点的时候，我们需要去处理孤立节点。 删除叶子节点 删除一个叶子节点的过程正好是新增一个叶子节点的逆过程，我们在删除节点的同时该节点右边所有节点的左右值和该父节点的右值都会减去该节点的宽度值： 12345678910LOCK TABLE category WRITE;SELECT @myLeft := lft, @myRight := rgt, @myWidth := rgt - lft + 1 FROM category WHERE title = 'Game Consoles';DELETE FROM category WHERE lft BETWEEN @myLeft AND @myRight;UPDATE category SET rgt = rgt - @myWidth WHERE rgt &gt; @myRight;UPDATE category SET lft = lft - @myWidth WHERE lft &gt; @myRight;UNLOCK TABLES; 删除子节点以及整颗子树 12345678910LOCK TABLE category WRITE;SELECT @myLeft := lft, @myRight := rgt, @myWidth := rgt - lft + 1 FROM category WHERE title = 'Cameras &amp; photo';DELETE FROM category WHERE lft BETWEEN @myLeft AND @myRight;UPDATE category SET rgt = rgt - @myWidth WHERE rgt &gt; @myRight;UPDATE category SET lft = lft - @myWidth WHERE lft &gt; @myRight;UNLOCK TABLES; 删除该节点，而不删除该节点的子节点 1234567891011LOCK TABLE category WRITE;SELECT @myLeft := lft, @myRight := rgt, @myWidth := rgt - lft + 1 FROM category WHERE title = 'Cameras &amp; photo';DELETE FROM category WHERE lft = @myLeft;UPDATE category SET rgt = rgt - 1, lft = lft - 1 WHERE lft BETWEEN @myLeft AND @myRight;UPDATE category SET rgt = rgt - 2 WHERE rgt &gt; @myRight;UPDATE category SET lft = lft - 2 WHERE lft &gt; @myRight;UNLOCK TABLES; 在这个例子中，我们对该节点所有右边节点的左右值都减去了2（因为不考虑其子节点，该节点的宽度为2），对该节点的子节点的左右值都减去了1（弥补由于失去父节点的左值造成的裂缝） 参考资源 链接：http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/ 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","link":"/2019/08/hierarchical-data-nested-set-model.html"},{"title":"虚拟机 CentOS7 配置IP","text":"CentOS7 IP配置网络连接方式建议更换成桥接网卡CentOS7的查看IP已经和低版本不一样了 123456789101112# 查看ip信息ip addr# 对应存放网卡配置的地方，找到自己对应的网卡名cd /etc/sysconfig/network-scripts# 我这是 enp0s3 所以对应的是 ifcfg-enp0s3快速查看当前网卡$ ip link | awk 'NR%2==1' | awk '{print $2,$8,$9}' | tr -d ':'输出：第二个就是网卡设备lo state UNKNOWNenp0s3 state UP 12345678910111213141516# 打开 ifcfg-enp0s3 网卡配置文件vi /etc/sysconfig/network-scripts/ifcfg-enp0s3# 修改配置ONBOOT=no -&gt; ONBOOT=yes# 重启网络（两个命令都可以）service network restartsystemctl restart network# 如果经常重启电脑或虚拟机可能会导致ip变更，可以自行绑定一个同网段的ip比如127#ZONE=public#IPADDR=192.168.6.127 # centos的ip地址#NETMASK=255.255.255.0 # 子网掩码#GATEWAY=192.168.6.2 # 网关 1# 重启过后就可以查看到对应的ip了,尝试ping一下ip，如果通的，就可以使用终端连接了","link":"/2019/12/virtual-centos7-set-up-ip.html"},{"title":"开启、关闭防火墙或者开放端口","text":"本地开发可以这样操作，生产环境应避免关闭防火墙 123456systemctl status firewalld #查看防火墙状态systemctl start firewalld #开启防火墙sudo systemctl disable firewalld # 关闭防火墙自启service firewalld start #开启防火墙systemctl stop firewalld #关闭防火墙systemctl stop firewalld #关闭防火墙 若遇到无法开启12systemctl unmask firewalld.service #1systemctl start firewalld.service #2 开放端口123456#查询端口号80是否开启:firewall-cmd --query-port=80/tcp #重启防火墙:firewall-cmd --reload #查询有哪些端口是开启的:firewall-cmd --list-port","link":"/2020/01/close-the-firewall-or-open-port.html"},{"title":"VirtualBox 6.1 安装 CentOS7 虚拟主机","text":"介绍需求：在本地运行一套和线上一样的环境，用于本地开发使用 VirtualBox 是一款可以运行Windows、Mac、Linux操作系统，功能强大的开源虚拟机软件 CentOS 是 Linux 操作系统 准备 从 VirtualBox 官网下载并安装好，安装后打开是以下这样的： 下载一个 CentOS 镜像，最好下载 minimal 版本，只带命令行就够了 开始安装 tips:可以将 VirtualBox 软件设置成中文，preferences-》language-》简体中文 创建虚拟机点击新建(new) -》输入名称 centos -》 会自动调整类型和版本 -》然后点继续 设置内存根据自己机器内存大小设置，以及同时启动几个虚拟主机，我这边设置 1G（默认1024M）-》然后点击继续 创建虚拟硬盘默认现在创建，点击创建-》虚拟硬盘文件类型默认，点继续-》存储在硬盘上默认动态分配，点击继续-》文件位置和大小，默认，点击创建虚拟主机创建成功，接下来还要对刚创建的主机进行设置， 设置虚拟主机点击刚创建的虚拟机-》点击系统启动顺序将软驱调整为最后一位选择存储tab，1点击没有盘片-》2点击小圆-》选择本地硬盘上的 CentOS 镜像-》然后点击OK网络选择桥接网卡 启动虚拟主机选择创建的虚拟主机，点击启动-》弹出询问继续点启动默认回车安装设置语言，默认英语，点击继续吧（continue）设置下地区和时间选择亚洲和上海，然后点击完成（done）设置存储在哪，点击进入选择1选择刚创建的虚拟硬盘-》2点击完成点击开始安装在安装的过程中需要设置一个root密码，也可以一并设置一个新用户然后就静静的等待安装完成吧，最后点击 reboot 重启即可 如需查看ip配置请查看虚拟机 CentOS7 配置IP","link":"/2019/12/virtualbox-6.1-install-centos7-virtual.html"},{"title":"CentOS 7 yum 安装 PHP7.3","text":"Remi 软件源Remi 软件源 主要提供最新版的 PHP 软件包和其他一些 PHP 扩展工具包，它是针对 Fedora 和 RHEL 系分支变体 （包括：RHEL, CentOS, Oracle Linux 等等） 要安装 PHP，推荐使用 Remi 软件源。Remi 对 PHP 的支持和更新都很积极，可以在第一时间获得新版本的支持。 安装 EPEL 源及源管理工具： 1yum install epel-release yum-utils 安装 REMI 源： 1yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm 安装 PHP7.3 及扩展： 12345678yum install -y php73-php-fpm php73-php-cli php73-php-bcmath php73-php-gd php73-php-json php73-php-mbstring php73-php-mcrypt php73-php-mysqlnd php73-php-opcache php73-php-pdo php73-php-pecl-crypto php73-php-pecl-mcrypt php73-php-pecl-geoip php73-php-pecl-swoole php73-php-recode php73-php-snmp php73-php-soap php73-php-xmllphp73 -v #查看版本systemctl enable php73-php-fpm #开启开机自启systemctl restart php73-php-fpm #重启systemctl start php73-php-fpm #启动systemctl stop php73-php-fpm #关闭systemctl status php73-php-fpm #检查状态 配置文件路径： 1234567891011121314151617181920#查找php.ini位置：find /etc/opt/remi/php73 -name php.ini# The current PHP memory limit is below the recommended value of 512MB.vi /etc/opt/remi/php73/php.inimemory_limit = 512M#如果你运行的是 nginx 而不是 apache，修改vi /etc/opt/remi/php73/php-fpm.d/www.confuser = apachegroup = apache# Replace the values withuser = nginxgroup = nginx#查找 php 和扩展的安装包：rpm -qa | grep 'php'#查看 php73-php-pecl-swoole4-4.4.15-1.el7.remi.x86_64 的安装路径：rpm -ql php73-php-pecl-swoole4-4.4.15-1.el7.remi.x86_64 设置php： 123456789# 将php73链接到系统环境变量中，就可以使用 php -vln -s /opt/remi/php73/root/usr/bin/php /usr/bin/php # 将 cgi.fix_pathinfo 设置为 0sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/' /etc/opt/remi/php73/php.ini关于 cgi.fix_pathinfo 选项请查看(https://taobig.org/?p=650)潜在的漏洞风险，关于安全隐患的问题可查看(http://www.laruence.com/2010/05/20/1495.html) 安装更多扩展：目前只安装了部分 PHP 拓展，更多扩展可见： 1yum search php73 更新 PHP: 1yum update #更新可更新的所有软件，包括PHP 参考：https://linuxize.com/post/install-php-7-on-centos-7/","link":"/2020/01/centos-yum-install-php7.3.html"}],"tags":[{"name":"zsh","slug":"zsh","link":"/tags/zsh/"},{"name":"oh-my-zsh","slug":"oh-my-zsh","link":"/tags/oh-my-zsh/"},{"name":"php","slug":"php","link":"/tags/php/"},{"name":"LNMP","slug":"LNMP","link":"/tags/LNMP/"},{"name":"RabbitMQ","slug":"RabbitMQ","link":"/tags/RabbitMQ/"},{"name":"message","slug":"message","link":"/tags/message/"},{"name":"AMQP","slug":"AMQP","link":"/tags/AMQP/"},{"name":"Erlang","slug":"Erlang","link":"/tags/Erlang/"},{"name":"无限极分类","slug":"无限极分类","link":"/tags/%E6%97%A0%E9%99%90%E6%9E%81%E5%88%86%E7%B1%BB/"},{"name":"递归","slug":"递归","link":"/tags/%E9%80%92%E5%BD%92/"},{"name":"OOP","slug":"OOP","link":"/tags/OOP/"},{"name":"centos","slug":"centos","link":"/tags/centos/"},{"name":"swoole-learn","slug":"swoole-learn","link":"/tags/swoole-learn/"}],"categories":[{"name":"Ubuntu","slug":"Ubuntu","link":"/categories/Ubuntu/"},{"name":"Mac","slug":"Mac","link":"/categories/Mac/"},{"name":"MQ","slug":"MQ","link":"/categories/MQ/"},{"name":"算法","slug":"算法","link":"/categories/%E7%AE%97%E6%B3%95/"},{"name":"面试题","slug":"面试题","link":"/categories/%E9%9D%A2%E8%AF%95%E9%A2%98/"},{"name":"CentOS","slug":"CentOS","link":"/categories/CentOS/"},{"name":"RabbitMQ","slug":"MQ/RabbitMQ","link":"/categories/MQ/RabbitMQ/"}]}